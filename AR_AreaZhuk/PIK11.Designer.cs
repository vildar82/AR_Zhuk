//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AR_AreaZhuk {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PIK1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PIK1 : global::System.Data.DataSet {
        
        private F_nn_FlatsInSectionDataTable tableF_nn_FlatsInSection;
        
        private C_Flats_PIK1DataTable tableC_Flats_PIK1;
        
        private C_SectionsDataTable tableC_Sections;
        
        private FlatsInSectionsDataTable tableFlatsInSections;
        
        private C_Flats_PIK1_AreasDataTable tableC_Flats_PIK1_Areas;
        
        private global::System.Data.DataRelation relationF_nn_FlatsInSection_Flats;
        
        private global::System.Data.DataRelation relationF_nn_FlatsInSection_Flats1;
        
        private global::System.Data.DataRelation relationF_nn_FlatsInSection_Sections;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PIK1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PIK1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F_nn_FlatsInSection"] != null)) {
                    base.Tables.Add(new F_nn_FlatsInSectionDataTable(ds.Tables["F_nn_FlatsInSection"]));
                }
                if ((ds.Tables["C_Flats_PIK1"] != null)) {
                    base.Tables.Add(new C_Flats_PIK1DataTable(ds.Tables["C_Flats_PIK1"]));
                }
                if ((ds.Tables["C_Sections"] != null)) {
                    base.Tables.Add(new C_SectionsDataTable(ds.Tables["C_Sections"]));
                }
                if ((ds.Tables["FlatsInSections"] != null)) {
                    base.Tables.Add(new FlatsInSectionsDataTable(ds.Tables["FlatsInSections"]));
                }
                if ((ds.Tables["C_Flats_PIK1_Areas"] != null)) {
                    base.Tables.Add(new C_Flats_PIK1_AreasDataTable(ds.Tables["C_Flats_PIK1_Areas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F_nn_FlatsInSectionDataTable F_nn_FlatsInSection {
            get {
                return this.tableF_nn_FlatsInSection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public C_Flats_PIK1DataTable C_Flats_PIK1 {
            get {
                return this.tableC_Flats_PIK1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public C_SectionsDataTable C_Sections {
            get {
                return this.tableC_Sections;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FlatsInSectionsDataTable FlatsInSections {
            get {
                return this.tableFlatsInSections;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public C_Flats_PIK1_AreasDataTable C_Flats_PIK1_Areas {
            get {
                return this.tableC_Flats_PIK1_Areas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            PIK1 cln = ((PIK1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F_nn_FlatsInSection"] != null)) {
                    base.Tables.Add(new F_nn_FlatsInSectionDataTable(ds.Tables["F_nn_FlatsInSection"]));
                }
                if ((ds.Tables["C_Flats_PIK1"] != null)) {
                    base.Tables.Add(new C_Flats_PIK1DataTable(ds.Tables["C_Flats_PIK1"]));
                }
                if ((ds.Tables["C_Sections"] != null)) {
                    base.Tables.Add(new C_SectionsDataTable(ds.Tables["C_Sections"]));
                }
                if ((ds.Tables["FlatsInSections"] != null)) {
                    base.Tables.Add(new FlatsInSectionsDataTable(ds.Tables["FlatsInSections"]));
                }
                if ((ds.Tables["C_Flats_PIK1_Areas"] != null)) {
                    base.Tables.Add(new C_Flats_PIK1_AreasDataTable(ds.Tables["C_Flats_PIK1_Areas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableF_nn_FlatsInSection = ((F_nn_FlatsInSectionDataTable)(base.Tables["F_nn_FlatsInSection"]));
            if ((initTable == true)) {
                if ((this.tableF_nn_FlatsInSection != null)) {
                    this.tableF_nn_FlatsInSection.InitVars();
                }
            }
            this.tableC_Flats_PIK1 = ((C_Flats_PIK1DataTable)(base.Tables["C_Flats_PIK1"]));
            if ((initTable == true)) {
                if ((this.tableC_Flats_PIK1 != null)) {
                    this.tableC_Flats_PIK1.InitVars();
                }
            }
            this.tableC_Sections = ((C_SectionsDataTable)(base.Tables["C_Sections"]));
            if ((initTable == true)) {
                if ((this.tableC_Sections != null)) {
                    this.tableC_Sections.InitVars();
                }
            }
            this.tableFlatsInSections = ((FlatsInSectionsDataTable)(base.Tables["FlatsInSections"]));
            if ((initTable == true)) {
                if ((this.tableFlatsInSections != null)) {
                    this.tableFlatsInSections.InitVars();
                }
            }
            this.tableC_Flats_PIK1_Areas = ((C_Flats_PIK1_AreasDataTable)(base.Tables["C_Flats_PIK1_Areas"]));
            if ((initTable == true)) {
                if ((this.tableC_Flats_PIK1_Areas != null)) {
                    this.tableC_Flats_PIK1_Areas.InitVars();
                }
            }
            this.relationF_nn_FlatsInSection_Flats = this.Relations["F_nn_FlatsInSection_Flats"];
            this.relationF_nn_FlatsInSection_Flats1 = this.Relations["F_nn_FlatsInSection_Flats1"];
            this.relationF_nn_FlatsInSection_Sections = this.Relations["F_nn_FlatsInSection_Sections"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "PIK1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PIK1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF_nn_FlatsInSection = new F_nn_FlatsInSectionDataTable();
            base.Tables.Add(this.tableF_nn_FlatsInSection);
            this.tableC_Flats_PIK1 = new C_Flats_PIK1DataTable();
            base.Tables.Add(this.tableC_Flats_PIK1);
            this.tableC_Sections = new C_SectionsDataTable();
            base.Tables.Add(this.tableC_Sections);
            this.tableFlatsInSections = new FlatsInSectionsDataTable();
            base.Tables.Add(this.tableFlatsInSections);
            this.tableC_Flats_PIK1_Areas = new C_Flats_PIK1_AreasDataTable();
            base.Tables.Add(this.tableC_Flats_PIK1_Areas);
            this.relationF_nn_FlatsInSection_Flats = new global::System.Data.DataRelation("F_nn_FlatsInSection_Flats", new global::System.Data.DataColumn[] {
                        this.tableC_Flats_PIK1.ID_FlatColumn}, new global::System.Data.DataColumn[] {
                        this.tableF_nn_FlatsInSection.ID_FlatColumn}, false);
            this.Relations.Add(this.relationF_nn_FlatsInSection_Flats);
            this.relationF_nn_FlatsInSection_Flats1 = new global::System.Data.DataRelation("F_nn_FlatsInSection_Flats1", new global::System.Data.DataColumn[] {
                        this.tableFlatsInSections.ID_FlatColumn}, new global::System.Data.DataColumn[] {
                        this.tableF_nn_FlatsInSection.ID_FlatColumn}, false);
            this.Relations.Add(this.relationF_nn_FlatsInSection_Flats1);
            this.relationF_nn_FlatsInSection_Sections = new global::System.Data.DataRelation("F_nn_FlatsInSection_Sections", new global::System.Data.DataColumn[] {
                        this.tableC_Sections.ID_SectionColumn}, new global::System.Data.DataColumn[] {
                        this.tableF_nn_FlatsInSection.ID_SectionColumn}, false);
            this.Relations.Add(this.relationF_nn_FlatsInSection_Sections);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeF_nn_FlatsInSection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeC_Flats_PIK1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeC_Sections() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFlatsInSections() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeC_Flats_PIK1_Areas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PIK1 ds = new PIK1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void F_nn_FlatsInSectionRowChangeEventHandler(object sender, F_nn_FlatsInSectionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void C_Flats_PIK1RowChangeEventHandler(object sender, C_Flats_PIK1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void C_SectionsRowChangeEventHandler(object sender, C_SectionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FlatsInSectionsRowChangeEventHandler(object sender, FlatsInSectionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void C_Flats_PIK1_AreasRowChangeEventHandler(object sender, C_Flats_PIK1_AreasRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F_nn_FlatsInSectionDataTable : global::System.Data.TypedTableBase<F_nn_FlatsInSectionRow> {
            
            private global::System.Data.DataColumn columnID_Section;
            
            private global::System.Data.DataColumn columnID_Flat;
            
            private global::System.Data.DataColumn columnSelectedIndexBottom;
            
            private global::System.Data.DataColumn columnSelectedIndexTop;
            
            private global::System.Data.DataColumn columnID_FlatInSection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionDataTable() {
                this.TableName = "F_nn_FlatsInSection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal F_nn_FlatsInSectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected F_nn_FlatsInSectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SectionColumn {
                get {
                    return this.columnID_Section;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_FlatColumn {
                get {
                    return this.columnID_Flat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexBottomColumn {
                get {
                    return this.columnSelectedIndexBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexTopColumn {
                get {
                    return this.columnSelectedIndexTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_FlatInSectionColumn {
                get {
                    return this.columnID_FlatInSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow this[int index] {
                get {
                    return ((F_nn_FlatsInSectionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event F_nn_FlatsInSectionRowChangeEventHandler F_nn_FlatsInSectionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event F_nn_FlatsInSectionRowChangeEventHandler F_nn_FlatsInSectionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event F_nn_FlatsInSectionRowChangeEventHandler F_nn_FlatsInSectionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event F_nn_FlatsInSectionRowChangeEventHandler F_nn_FlatsInSectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddF_nn_FlatsInSectionRow(F_nn_FlatsInSectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow AddF_nn_FlatsInSectionRow(C_SectionsRow parentC_SectionsRowByF_nn_FlatsInSection_Sections, C_Flats_PIK1Row parentC_Flats_PIK1RowByF_nn_FlatsInSection_Flats, int SelectedIndexBottom, int SelectedIndexTop) {
                F_nn_FlatsInSectionRow rowF_nn_FlatsInSectionRow = ((F_nn_FlatsInSectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        SelectedIndexBottom,
                        SelectedIndexTop,
                        null};
                if ((parentC_SectionsRowByF_nn_FlatsInSection_Sections != null)) {
                    columnValuesArray[0] = parentC_SectionsRowByF_nn_FlatsInSection_Sections[3];
                }
                if ((parentC_Flats_PIK1RowByF_nn_FlatsInSection_Flats != null)) {
                    columnValuesArray[1] = parentC_Flats_PIK1RowByF_nn_FlatsInSection_Flats[0];
                }
                rowF_nn_FlatsInSectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF_nn_FlatsInSectionRow);
                return rowF_nn_FlatsInSectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow FindByID_FlatInSection(int ID_FlatInSection) {
                return ((F_nn_FlatsInSectionRow)(this.Rows.Find(new object[] {
                            ID_FlatInSection})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                F_nn_FlatsInSectionDataTable cln = ((F_nn_FlatsInSectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F_nn_FlatsInSectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Section = base.Columns["ID_Section"];
                this.columnID_Flat = base.Columns["ID_Flat"];
                this.columnSelectedIndexBottom = base.Columns["SelectedIndexBottom"];
                this.columnSelectedIndexTop = base.Columns["SelectedIndexTop"];
                this.columnID_FlatInSection = base.Columns["ID_FlatInSection"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Section = new global::System.Data.DataColumn("ID_Section", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Section);
                this.columnID_Flat = new global::System.Data.DataColumn("ID_Flat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Flat);
                this.columnSelectedIndexBottom = new global::System.Data.DataColumn("SelectedIndexBottom", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexBottom);
                this.columnSelectedIndexTop = new global::System.Data.DataColumn("SelectedIndexTop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexTop);
                this.columnID_FlatInSection = new global::System.Data.DataColumn("ID_FlatInSection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FlatInSection);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_FlatInSection}, true));
                this.columnID_Section.AllowDBNull = false;
                this.columnID_Flat.AllowDBNull = false;
                this.columnSelectedIndexBottom.AllowDBNull = false;
                this.columnSelectedIndexTop.AllowDBNull = false;
                this.columnID_FlatInSection.AutoIncrement = true;
                this.columnID_FlatInSection.AutoIncrementSeed = -1;
                this.columnID_FlatInSection.AutoIncrementStep = -1;
                this.columnID_FlatInSection.AllowDBNull = false;
                this.columnID_FlatInSection.ReadOnly = true;
                this.columnID_FlatInSection.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow NewF_nn_FlatsInSectionRow() {
                return ((F_nn_FlatsInSectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F_nn_FlatsInSectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(F_nn_FlatsInSectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F_nn_FlatsInSectionRowChanged != null)) {
                    this.F_nn_FlatsInSectionRowChanged(this, new F_nn_FlatsInSectionRowChangeEvent(((F_nn_FlatsInSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F_nn_FlatsInSectionRowChanging != null)) {
                    this.F_nn_FlatsInSectionRowChanging(this, new F_nn_FlatsInSectionRowChangeEvent(((F_nn_FlatsInSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F_nn_FlatsInSectionRowDeleted != null)) {
                    this.F_nn_FlatsInSectionRowDeleted(this, new F_nn_FlatsInSectionRowChangeEvent(((F_nn_FlatsInSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F_nn_FlatsInSectionRowDeleting != null)) {
                    this.F_nn_FlatsInSectionRowDeleting(this, new F_nn_FlatsInSectionRowChangeEvent(((F_nn_FlatsInSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveF_nn_FlatsInSectionRow(F_nn_FlatsInSectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIK1 ds = new PIK1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F_nn_FlatsInSectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class C_Flats_PIK1DataTable : global::System.Data.TypedTableBase<C_Flats_PIK1Row> {
            
            private global::System.Data.DataColumn columnID_Flat;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnShortType;
            
            private global::System.Data.DataColumn columnAreaLive;
            
            private global::System.Data.DataColumn columnAreaTotalStandart;
            
            private global::System.Data.DataColumn columnAreaTotalStrong;
            
            private global::System.Data.DataColumn columnAreaInModule;
            
            private global::System.Data.DataColumn columnSelectedIndexBottom;
            
            private global::System.Data.DataColumn columnSelectedIndexTop;
            
            private global::System.Data.DataColumn columnLinkageBefore;
            
            private global::System.Data.DataColumn columnLinkageAfter;
            
            private global::System.Data.DataColumn columnFactorSmoke;
            
            private global::System.Data.DataColumn columnLightBottom;
            
            private global::System.Data.DataColumn columnLightTop;
            
            private global::System.Data.DataColumn columnIndexTop;
            
            private global::System.Data.DataColumn columnIndexBottom;
            
            private global::System.Data.DataColumn columnSubZone;
            
            private global::System.Data.DataColumn columnLinkageOr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1DataTable() {
                this.TableName = "C_Flats_PIK1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_Flats_PIK1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected C_Flats_PIK1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_FlatColumn {
                get {
                    return this.columnID_Flat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTypeColumn {
                get {
                    return this.columnShortType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaLiveColumn {
                get {
                    return this.columnAreaLive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaTotalStandartColumn {
                get {
                    return this.columnAreaTotalStandart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaTotalStrongColumn {
                get {
                    return this.columnAreaTotalStrong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaInModuleColumn {
                get {
                    return this.columnAreaInModule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexBottomColumn {
                get {
                    return this.columnSelectedIndexBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexTopColumn {
                get {
                    return this.columnSelectedIndexTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkageBeforeColumn {
                get {
                    return this.columnLinkageBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkageAfterColumn {
                get {
                    return this.columnLinkageAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorSmokeColumn {
                get {
                    return this.columnFactorSmoke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LightBottomColumn {
                get {
                    return this.columnLightBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LightTopColumn {
                get {
                    return this.columnLightTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexTopColumn {
                get {
                    return this.columnIndexTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexBottomColumn {
                get {
                    return this.columnIndexBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubZoneColumn {
                get {
                    return this.columnSubZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkageOrColumn {
                get {
                    return this.columnLinkageOr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row this[int index] {
                get {
                    return ((C_Flats_PIK1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1RowChangeEventHandler C_Flats_PIK1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1RowChangeEventHandler C_Flats_PIK1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1RowChangeEventHandler C_Flats_PIK1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1RowChangeEventHandler C_Flats_PIK1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddC_Flats_PIK1Row(C_Flats_PIK1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row AddC_Flats_PIK1Row(
                        string Type, 
                        string ShortType, 
                        double AreaLive, 
                        double AreaTotalStandart, 
                        double AreaTotalStrong, 
                        int AreaInModule, 
                        int SelectedIndexBottom, 
                        int SelectedIndexTop, 
                        string LinkageBefore, 
                        string LinkageAfter, 
                        string FactorSmoke, 
                        string LightBottom, 
                        string LightTop, 
                        string IndexTop, 
                        string IndexBottom, 
                        string SubZone, 
                        string LinkageOr) {
                C_Flats_PIK1Row rowC_Flats_PIK1Row = ((C_Flats_PIK1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Type,
                        ShortType,
                        AreaLive,
                        AreaTotalStandart,
                        AreaTotalStrong,
                        AreaInModule,
                        SelectedIndexBottom,
                        SelectedIndexTop,
                        LinkageBefore,
                        LinkageAfter,
                        FactorSmoke,
                        LightBottom,
                        LightTop,
                        IndexTop,
                        IndexBottom,
                        SubZone,
                        LinkageOr};
                rowC_Flats_PIK1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowC_Flats_PIK1Row);
                return rowC_Flats_PIK1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row FindByID_Flat(int ID_Flat) {
                return ((C_Flats_PIK1Row)(this.Rows.Find(new object[] {
                            ID_Flat})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                C_Flats_PIK1DataTable cln = ((C_Flats_PIK1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new C_Flats_PIK1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Flat = base.Columns["ID_Flat"];
                this.columnType = base.Columns["Type"];
                this.columnShortType = base.Columns["ShortType"];
                this.columnAreaLive = base.Columns["AreaLive"];
                this.columnAreaTotalStandart = base.Columns["AreaTotalStandart"];
                this.columnAreaTotalStrong = base.Columns["AreaTotalStrong"];
                this.columnAreaInModule = base.Columns["AreaInModule"];
                this.columnSelectedIndexBottom = base.Columns["SelectedIndexBottom"];
                this.columnSelectedIndexTop = base.Columns["SelectedIndexTop"];
                this.columnLinkageBefore = base.Columns["LinkageBefore"];
                this.columnLinkageAfter = base.Columns["LinkageAfter"];
                this.columnFactorSmoke = base.Columns["FactorSmoke"];
                this.columnLightBottom = base.Columns["LightBottom"];
                this.columnLightTop = base.Columns["LightTop"];
                this.columnIndexTop = base.Columns["IndexTop"];
                this.columnIndexBottom = base.Columns["IndexBottom"];
                this.columnSubZone = base.Columns["SubZone"];
                this.columnLinkageOr = base.Columns["LinkageOr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Flat = new global::System.Data.DataColumn("ID_Flat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Flat);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnShortType = new global::System.Data.DataColumn("ShortType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortType);
                this.columnAreaLive = new global::System.Data.DataColumn("AreaLive", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaLive);
                this.columnAreaTotalStandart = new global::System.Data.DataColumn("AreaTotalStandart", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaTotalStandart);
                this.columnAreaTotalStrong = new global::System.Data.DataColumn("AreaTotalStrong", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaTotalStrong);
                this.columnAreaInModule = new global::System.Data.DataColumn("AreaInModule", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaInModule);
                this.columnSelectedIndexBottom = new global::System.Data.DataColumn("SelectedIndexBottom", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexBottom);
                this.columnSelectedIndexTop = new global::System.Data.DataColumn("SelectedIndexTop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexTop);
                this.columnLinkageBefore = new global::System.Data.DataColumn("LinkageBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkageBefore);
                this.columnLinkageAfter = new global::System.Data.DataColumn("LinkageAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkageAfter);
                this.columnFactorSmoke = new global::System.Data.DataColumn("FactorSmoke", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorSmoke);
                this.columnLightBottom = new global::System.Data.DataColumn("LightBottom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightBottom);
                this.columnLightTop = new global::System.Data.DataColumn("LightTop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightTop);
                this.columnIndexTop = new global::System.Data.DataColumn("IndexTop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexTop);
                this.columnIndexBottom = new global::System.Data.DataColumn("IndexBottom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexBottom);
                this.columnSubZone = new global::System.Data.DataColumn("SubZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubZone);
                this.columnLinkageOr = new global::System.Data.DataColumn("LinkageOr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkageOr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Flat}, true));
                this.columnID_Flat.AutoIncrement = true;
                this.columnID_Flat.AutoIncrementSeed = -1;
                this.columnID_Flat.AutoIncrementStep = -1;
                this.columnID_Flat.AllowDBNull = false;
                this.columnID_Flat.ReadOnly = true;
                this.columnID_Flat.Unique = true;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnShortType.AllowDBNull = false;
                this.columnShortType.MaxLength = 50;
                this.columnAreaLive.AllowDBNull = false;
                this.columnAreaTotalStandart.AllowDBNull = false;
                this.columnAreaTotalStrong.AllowDBNull = false;
                this.columnAreaInModule.AllowDBNull = false;
                this.columnSelectedIndexBottom.AllowDBNull = false;
                this.columnSelectedIndexTop.AllowDBNull = false;
                this.columnLinkageBefore.AllowDBNull = false;
                this.columnLinkageBefore.MaxLength = 10;
                this.columnLinkageAfter.AllowDBNull = false;
                this.columnLinkageAfter.MaxLength = 10;
                this.columnFactorSmoke.AllowDBNull = false;
                this.columnFactorSmoke.MaxLength = 50;
                this.columnLightBottom.AllowDBNull = false;
                this.columnLightBottom.MaxLength = 50;
                this.columnLightTop.AllowDBNull = false;
                this.columnLightTop.MaxLength = 50;
                this.columnIndexTop.AllowDBNull = false;
                this.columnIndexTop.MaxLength = 50;
                this.columnIndexBottom.AllowDBNull = false;
                this.columnIndexBottom.MaxLength = 50;
                this.columnSubZone.AllowDBNull = false;
                this.columnSubZone.MaxLength = 50;
                this.columnLinkageOr.AllowDBNull = false;
                this.columnLinkageOr.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row NewC_Flats_PIK1Row() {
                return ((C_Flats_PIK1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new C_Flats_PIK1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(C_Flats_PIK1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.C_Flats_PIK1RowChanged != null)) {
                    this.C_Flats_PIK1RowChanged(this, new C_Flats_PIK1RowChangeEvent(((C_Flats_PIK1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.C_Flats_PIK1RowChanging != null)) {
                    this.C_Flats_PIK1RowChanging(this, new C_Flats_PIK1RowChangeEvent(((C_Flats_PIK1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.C_Flats_PIK1RowDeleted != null)) {
                    this.C_Flats_PIK1RowDeleted(this, new C_Flats_PIK1RowChangeEvent(((C_Flats_PIK1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.C_Flats_PIK1RowDeleting != null)) {
                    this.C_Flats_PIK1RowDeleting(this, new C_Flats_PIK1RowChangeEvent(((C_Flats_PIK1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveC_Flats_PIK1Row(C_Flats_PIK1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIK1 ds = new PIK1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "C_Flats_PIK1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class C_SectionsDataTable : global::System.Data.TypedTableBase<C_SectionsRow> {
            
            private global::System.Data.DataColumn columnCountModules;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnLevels;
            
            private global::System.Data.DataColumn columnID_Section;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsDataTable() {
                this.TableName = "C_Sections";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_SectionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected C_SectionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountModulesColumn {
                get {
                    return this.columnCountModules;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelsColumn {
                get {
                    return this.columnLevels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SectionColumn {
                get {
                    return this.columnID_Section;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow this[int index] {
                get {
                    return ((C_SectionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_SectionsRowChangeEventHandler C_SectionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_SectionsRowChangeEventHandler C_SectionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_SectionsRowChangeEventHandler C_SectionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_SectionsRowChangeEventHandler C_SectionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddC_SectionsRow(C_SectionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow AddC_SectionsRow(int CountModules, string Type, string Levels) {
                C_SectionsRow rowC_SectionsRow = ((C_SectionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CountModules,
                        Type,
                        Levels,
                        null};
                rowC_SectionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowC_SectionsRow);
                return rowC_SectionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow FindByID_Section(int ID_Section) {
                return ((C_SectionsRow)(this.Rows.Find(new object[] {
                            ID_Section})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                C_SectionsDataTable cln = ((C_SectionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new C_SectionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCountModules = base.Columns["CountModules"];
                this.columnType = base.Columns["Type"];
                this.columnLevels = base.Columns["Levels"];
                this.columnID_Section = base.Columns["ID_Section"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCountModules = new global::System.Data.DataColumn("CountModules", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountModules);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnLevels = new global::System.Data.DataColumn("Levels", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevels);
                this.columnID_Section = new global::System.Data.DataColumn("ID_Section", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Section);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Section}, true));
                this.columnCountModules.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnLevels.MaxLength = 50;
                this.columnID_Section.AutoIncrement = true;
                this.columnID_Section.AutoIncrementSeed = -1;
                this.columnID_Section.AutoIncrementStep = -1;
                this.columnID_Section.AllowDBNull = false;
                this.columnID_Section.ReadOnly = true;
                this.columnID_Section.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow NewC_SectionsRow() {
                return ((C_SectionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new C_SectionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(C_SectionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.C_SectionsRowChanged != null)) {
                    this.C_SectionsRowChanged(this, new C_SectionsRowChangeEvent(((C_SectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.C_SectionsRowChanging != null)) {
                    this.C_SectionsRowChanging(this, new C_SectionsRowChangeEvent(((C_SectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.C_SectionsRowDeleted != null)) {
                    this.C_SectionsRowDeleted(this, new C_SectionsRowChangeEvent(((C_SectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.C_SectionsRowDeleting != null)) {
                    this.C_SectionsRowDeleting(this, new C_SectionsRowChangeEvent(((C_SectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveC_SectionsRow(C_SectionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIK1 ds = new PIK1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "C_SectionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FlatsInSectionsDataTable : global::System.Data.TypedTableBase<FlatsInSectionsRow> {
            
            private global::System.Data.DataColumn columnID_Section;
            
            private global::System.Data.DataColumn columnCountModules;
            
            private global::System.Data.DataColumn columnTypeSection;
            
            private global::System.Data.DataColumn columnLevels;
            
            private global::System.Data.DataColumn columnTypeFlat;
            
            private global::System.Data.DataColumn columnID_Flat;
            
            private global::System.Data.DataColumn columnSelectedIndexBottom;
            
            private global::System.Data.DataColumn columnSelectedIndexTop;
            
            private global::System.Data.DataColumn columnShortType;
            
            private global::System.Data.DataColumn columnAreaLive;
            
            private global::System.Data.DataColumn columnAreaTotalStandart;
            
            private global::System.Data.DataColumn columnAreaTotalStrong;
            
            private global::System.Data.DataColumn columnAreaInModule;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnExpr2;
            
            private global::System.Data.DataColumn columnLinkageBefore;
            
            private global::System.Data.DataColumn columnLinkageAfter;
            
            private global::System.Data.DataColumn columnFactorSmoke;
            
            private global::System.Data.DataColumn columnLightBottom;
            
            private global::System.Data.DataColumn columnLightTop;
            
            private global::System.Data.DataColumn columnIndexTop;
            
            private global::System.Data.DataColumn columnIndexBottom;
            
            private global::System.Data.DataColumn columnSubZone;
            
            private global::System.Data.DataColumn columnID_FlatInSection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsDataTable() {
                this.TableName = "FlatsInSections";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FlatsInSectionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FlatsInSectionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SectionColumn {
                get {
                    return this.columnID_Section;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountModulesColumn {
                get {
                    return this.columnCountModules;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeSectionColumn {
                get {
                    return this.columnTypeSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelsColumn {
                get {
                    return this.columnLevels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeFlatColumn {
                get {
                    return this.columnTypeFlat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_FlatColumn {
                get {
                    return this.columnID_Flat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexBottomColumn {
                get {
                    return this.columnSelectedIndexBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectedIndexTopColumn {
                get {
                    return this.columnSelectedIndexTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTypeColumn {
                get {
                    return this.columnShortType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaLiveColumn {
                get {
                    return this.columnAreaLive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaTotalStandartColumn {
                get {
                    return this.columnAreaTotalStandart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaTotalStrongColumn {
                get {
                    return this.columnAreaTotalStrong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaInModuleColumn {
                get {
                    return this.columnAreaInModule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr2Column {
                get {
                    return this.columnExpr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkageBeforeColumn {
                get {
                    return this.columnLinkageBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkageAfterColumn {
                get {
                    return this.columnLinkageAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorSmokeColumn {
                get {
                    return this.columnFactorSmoke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LightBottomColumn {
                get {
                    return this.columnLightBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LightTopColumn {
                get {
                    return this.columnLightTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexTopColumn {
                get {
                    return this.columnIndexTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexBottomColumn {
                get {
                    return this.columnIndexBottom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubZoneColumn {
                get {
                    return this.columnSubZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_FlatInSectionColumn {
                get {
                    return this.columnID_FlatInSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow this[int index] {
                get {
                    return ((FlatsInSectionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FlatsInSectionsRowChangeEventHandler FlatsInSectionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FlatsInSectionsRowChangeEventHandler FlatsInSectionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FlatsInSectionsRowChangeEventHandler FlatsInSectionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FlatsInSectionsRowChangeEventHandler FlatsInSectionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFlatsInSectionsRow(FlatsInSectionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow AddFlatsInSectionsRow(
                        int CountModules, 
                        string TypeSection, 
                        string Levels, 
                        string TypeFlat, 
                        int SelectedIndexBottom, 
                        int SelectedIndexTop, 
                        string ShortType, 
                        double AreaLive, 
                        double AreaTotalStandart, 
                        double AreaTotalStrong, 
                        int AreaInModule, 
                        int Expr1, 
                        int Expr2, 
                        string LinkageBefore, 
                        string LinkageAfter, 
                        string FactorSmoke, 
                        string LightBottom, 
                        string LightTop, 
                        string IndexTop, 
                        string IndexBottom, 
                        string SubZone) {
                FlatsInSectionsRow rowFlatsInSectionsRow = ((FlatsInSectionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CountModules,
                        TypeSection,
                        Levels,
                        TypeFlat,
                        null,
                        SelectedIndexBottom,
                        SelectedIndexTop,
                        ShortType,
                        AreaLive,
                        AreaTotalStandart,
                        AreaTotalStrong,
                        AreaInModule,
                        Expr1,
                        Expr2,
                        LinkageBefore,
                        LinkageAfter,
                        FactorSmoke,
                        LightBottom,
                        LightTop,
                        IndexTop,
                        IndexBottom,
                        SubZone,
                        null};
                rowFlatsInSectionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFlatsInSectionsRow);
                return rowFlatsInSectionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow FindByID_SectionID_FlatID_FlatInSection(int ID_Section, int ID_Flat, int ID_FlatInSection) {
                return ((FlatsInSectionsRow)(this.Rows.Find(new object[] {
                            ID_Section,
                            ID_Flat,
                            ID_FlatInSection})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FlatsInSectionsDataTable cln = ((FlatsInSectionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FlatsInSectionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Section = base.Columns["ID_Section"];
                this.columnCountModules = base.Columns["CountModules"];
                this.columnTypeSection = base.Columns["TypeSection"];
                this.columnLevels = base.Columns["Levels"];
                this.columnTypeFlat = base.Columns["TypeFlat"];
                this.columnID_Flat = base.Columns["ID_Flat"];
                this.columnSelectedIndexBottom = base.Columns["SelectedIndexBottom"];
                this.columnSelectedIndexTop = base.Columns["SelectedIndexTop"];
                this.columnShortType = base.Columns["ShortType"];
                this.columnAreaLive = base.Columns["AreaLive"];
                this.columnAreaTotalStandart = base.Columns["AreaTotalStandart"];
                this.columnAreaTotalStrong = base.Columns["AreaTotalStrong"];
                this.columnAreaInModule = base.Columns["AreaInModule"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnExpr2 = base.Columns["Expr2"];
                this.columnLinkageBefore = base.Columns["LinkageBefore"];
                this.columnLinkageAfter = base.Columns["LinkageAfter"];
                this.columnFactorSmoke = base.Columns["FactorSmoke"];
                this.columnLightBottom = base.Columns["LightBottom"];
                this.columnLightTop = base.Columns["LightTop"];
                this.columnIndexTop = base.Columns["IndexTop"];
                this.columnIndexBottom = base.Columns["IndexBottom"];
                this.columnSubZone = base.Columns["SubZone"];
                this.columnID_FlatInSection = base.Columns["ID_FlatInSection"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Section = new global::System.Data.DataColumn("ID_Section", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Section);
                this.columnCountModules = new global::System.Data.DataColumn("CountModules", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountModules);
                this.columnTypeSection = new global::System.Data.DataColumn("TypeSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeSection);
                this.columnLevels = new global::System.Data.DataColumn("Levels", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevels);
                this.columnTypeFlat = new global::System.Data.DataColumn("TypeFlat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeFlat);
                this.columnID_Flat = new global::System.Data.DataColumn("ID_Flat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Flat);
                this.columnSelectedIndexBottom = new global::System.Data.DataColumn("SelectedIndexBottom", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexBottom);
                this.columnSelectedIndexTop = new global::System.Data.DataColumn("SelectedIndexTop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedIndexTop);
                this.columnShortType = new global::System.Data.DataColumn("ShortType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortType);
                this.columnAreaLive = new global::System.Data.DataColumn("AreaLive", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaLive);
                this.columnAreaTotalStandart = new global::System.Data.DataColumn("AreaTotalStandart", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaTotalStandart);
                this.columnAreaTotalStrong = new global::System.Data.DataColumn("AreaTotalStrong", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaTotalStrong);
                this.columnAreaInModule = new global::System.Data.DataColumn("AreaInModule", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaInModule);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnExpr2 = new global::System.Data.DataColumn("Expr2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr2);
                this.columnLinkageBefore = new global::System.Data.DataColumn("LinkageBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkageBefore);
                this.columnLinkageAfter = new global::System.Data.DataColumn("LinkageAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkageAfter);
                this.columnFactorSmoke = new global::System.Data.DataColumn("FactorSmoke", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorSmoke);
                this.columnLightBottom = new global::System.Data.DataColumn("LightBottom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightBottom);
                this.columnLightTop = new global::System.Data.DataColumn("LightTop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightTop);
                this.columnIndexTop = new global::System.Data.DataColumn("IndexTop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexTop);
                this.columnIndexBottom = new global::System.Data.DataColumn("IndexBottom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexBottom);
                this.columnSubZone = new global::System.Data.DataColumn("SubZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubZone);
                this.columnID_FlatInSection = new global::System.Data.DataColumn("ID_FlatInSection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FlatInSection);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Section,
                                this.columnID_Flat,
                                this.columnID_FlatInSection}, true));
                this.columnID_Section.AutoIncrement = true;
                this.columnID_Section.AutoIncrementSeed = -1;
                this.columnID_Section.AutoIncrementStep = -1;
                this.columnID_Section.AllowDBNull = false;
                this.columnID_Section.ReadOnly = true;
                this.columnCountModules.AllowDBNull = false;
                this.columnTypeSection.AllowDBNull = false;
                this.columnTypeSection.MaxLength = 50;
                this.columnLevels.MaxLength = 50;
                this.columnTypeFlat.AllowDBNull = false;
                this.columnTypeFlat.MaxLength = 50;
                this.columnID_Flat.AutoIncrement = true;
                this.columnID_Flat.AutoIncrementSeed = -1;
                this.columnID_Flat.AutoIncrementStep = -1;
                this.columnID_Flat.AllowDBNull = false;
                this.columnID_Flat.ReadOnly = true;
                this.columnSelectedIndexBottom.AllowDBNull = false;
                this.columnSelectedIndexTop.AllowDBNull = false;
                this.columnShortType.AllowDBNull = false;
                this.columnShortType.MaxLength = 50;
                this.columnAreaLive.AllowDBNull = false;
                this.columnAreaTotalStandart.AllowDBNull = false;
                this.columnAreaTotalStrong.AllowDBNull = false;
                this.columnAreaInModule.AllowDBNull = false;
                this.columnExpr1.AllowDBNull = false;
                this.columnExpr2.AllowDBNull = false;
                this.columnLinkageBefore.AllowDBNull = false;
                this.columnLinkageBefore.MaxLength = 10;
                this.columnLinkageAfter.AllowDBNull = false;
                this.columnLinkageAfter.MaxLength = 10;
                this.columnFactorSmoke.AllowDBNull = false;
                this.columnFactorSmoke.MaxLength = 50;
                this.columnLightBottom.AllowDBNull = false;
                this.columnLightBottom.MaxLength = 50;
                this.columnLightTop.AllowDBNull = false;
                this.columnLightTop.MaxLength = 50;
                this.columnIndexTop.AllowDBNull = false;
                this.columnIndexTop.MaxLength = 50;
                this.columnIndexBottom.AllowDBNull = false;
                this.columnIndexBottom.MaxLength = 50;
                this.columnSubZone.MaxLength = 50;
                this.columnID_FlatInSection.AutoIncrement = true;
                this.columnID_FlatInSection.AutoIncrementSeed = -1;
                this.columnID_FlatInSection.AutoIncrementStep = -1;
                this.columnID_FlatInSection.AllowDBNull = false;
                this.columnID_FlatInSection.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow NewFlatsInSectionsRow() {
                return ((FlatsInSectionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FlatsInSectionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FlatsInSectionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FlatsInSectionsRowChanged != null)) {
                    this.FlatsInSectionsRowChanged(this, new FlatsInSectionsRowChangeEvent(((FlatsInSectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FlatsInSectionsRowChanging != null)) {
                    this.FlatsInSectionsRowChanging(this, new FlatsInSectionsRowChangeEvent(((FlatsInSectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FlatsInSectionsRowDeleted != null)) {
                    this.FlatsInSectionsRowDeleted(this, new FlatsInSectionsRowChangeEvent(((FlatsInSectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FlatsInSectionsRowDeleting != null)) {
                    this.FlatsInSectionsRowDeleting(this, new FlatsInSectionsRowChangeEvent(((FlatsInSectionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFlatsInSectionsRow(FlatsInSectionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIK1 ds = new PIK1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FlatsInSectionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class C_Flats_PIK1_AreasDataTable : global::System.Data.TypedTableBase<C_Flats_PIK1_AreasRow> {
            
            private global::System.Data.DataColumn columnId_Area;
            
            private global::System.Data.DataColumn columnShort_Type;
            
            private global::System.Data.DataColumn columnArea_Total_Low18;
            
            private global::System.Data.DataColumn columnArea_Total_Standart_More18;
            
            private global::System.Data.DataColumn columnArea_Total_Strong_More18;
            
            private global::System.Data.DataColumn columnArea_Total_End_Low18;
            
            private global::System.Data.DataColumn columnArea_Total_Standart_End_More18;
            
            private global::System.Data.DataColumn columnArea_Total_Strong_End_More18;
            
            private global::System.Data.DataColumn columnArea_Total_Standart_Seam_Low18;
            
            private global::System.Data.DataColumn columnArea_Total_Standart_Seam_More18;
            
            private global::System.Data.DataColumn columnArea_Total_Strong_Seam_More18;
            
            private global::System.Data.DataColumn columnCorrection_Low18;
            
            private global::System.Data.DataColumn columnCorrection_More18;
            
            private global::System.Data.DataColumn columnArea_Live_Low18;
            
            private global::System.Data.DataColumn columnArea_Live_Standart_More18;
            
            private global::System.Data.DataColumn columnArea_Live_Strong_More18;
            
            private global::System.Data.DataColumn columnArea_Live_End_Low18;
            
            private global::System.Data.DataColumn columnArea_Live_Standart_End_More18;
            
            private global::System.Data.DataColumn columnArea_Live_Strong_End_More18;
            
            private global::System.Data.DataColumn columnArea_Live_Seam_Low18;
            
            private global::System.Data.DataColumn columnArea_Live_Standart_Seam_More18;
            
            private global::System.Data.DataColumn columnArea_Live_Strong_Seam_More18;
            
            private global::System.Data.DataColumn columnArea_Level_Combo;
            
            private global::System.Data.DataColumn columnArea_Level_End;
            
            private global::System.Data.DataColumn columnArea_Level_Seam;
            
            private global::System.Data.DataColumn columnArea_OutFlat_Combo;
            
            private global::System.Data.DataColumn columnArea_OutFlat_Strong;
            
            private global::System.Data.DataColumn columnLike_Koef;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasDataTable() {
                this.TableName = "C_Flats_PIK1_Areas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_Flats_PIK1_AreasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected C_Flats_PIK1_AreasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Id_AreaColumn {
                get {
                    return this.columnId_Area;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Short_TypeColumn {
                get {
                    return this.columnShort_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Low18Column {
                get {
                    return this.columnArea_Total_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Standart_More18Column {
                get {
                    return this.columnArea_Total_Standart_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Strong_More18Column {
                get {
                    return this.columnArea_Total_Strong_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_End_Low18Column {
                get {
                    return this.columnArea_Total_End_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Standart_End_More18Column {
                get {
                    return this.columnArea_Total_Standart_End_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Strong_End_More18Column {
                get {
                    return this.columnArea_Total_Strong_End_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Standart_Seam_Low18Column {
                get {
                    return this.columnArea_Total_Standart_Seam_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Standart_Seam_More18Column {
                get {
                    return this.columnArea_Total_Standart_Seam_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Total_Strong_Seam_More18Column {
                get {
                    return this.columnArea_Total_Strong_Seam_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Correction_Low18Column {
                get {
                    return this.columnCorrection_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Correction_More18Column {
                get {
                    return this.columnCorrection_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Low18Column {
                get {
                    return this.columnArea_Live_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Standart_More18Column {
                get {
                    return this.columnArea_Live_Standart_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Strong_More18Column {
                get {
                    return this.columnArea_Live_Strong_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_End_Low18Column {
                get {
                    return this.columnArea_Live_End_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Standart_End_More18Column {
                get {
                    return this.columnArea_Live_Standart_End_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Strong_End_More18Column {
                get {
                    return this.columnArea_Live_Strong_End_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Seam_Low18Column {
                get {
                    return this.columnArea_Live_Seam_Low18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Standart_Seam_More18Column {
                get {
                    return this.columnArea_Live_Standart_Seam_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Live_Strong_Seam_More18Column {
                get {
                    return this.columnArea_Live_Strong_Seam_More18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Level_ComboColumn {
                get {
                    return this.columnArea_Level_Combo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Level_EndColumn {
                get {
                    return this.columnArea_Level_End;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_Level_SeamColumn {
                get {
                    return this.columnArea_Level_Seam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_OutFlat_ComboColumn {
                get {
                    return this.columnArea_OutFlat_Combo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Area_OutFlat_StrongColumn {
                get {
                    return this.columnArea_OutFlat_Strong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Like_KoefColumn {
                get {
                    return this.columnLike_Koef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRow this[int index] {
                get {
                    return ((C_Flats_PIK1_AreasRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1_AreasRowChangeEventHandler C_Flats_PIK1_AreasRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1_AreasRowChangeEventHandler C_Flats_PIK1_AreasRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1_AreasRowChangeEventHandler C_Flats_PIK1_AreasRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C_Flats_PIK1_AreasRowChangeEventHandler C_Flats_PIK1_AreasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddC_Flats_PIK1_AreasRow(C_Flats_PIK1_AreasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRow AddC_Flats_PIK1_AreasRow(
                        string Short_Type, 
                        double Area_Total_Low18, 
                        double Area_Total_Standart_More18, 
                        double Area_Total_Strong_More18, 
                        double Area_Total_End_Low18, 
                        double Area_Total_Standart_End_More18, 
                        double Area_Total_Strong_End_More18, 
                        double Area_Total_Standart_Seam_Low18, 
                        double Area_Total_Standart_Seam_More18, 
                        double Area_Total_Strong_Seam_More18, 
                        string Correction_Low18, 
                        string Correction_More18, 
                        double Area_Live_Low18, 
                        double Area_Live_Standart_More18, 
                        double Area_Live_Strong_More18, 
                        double Area_Live_End_Low18, 
                        double Area_Live_Standart_End_More18, 
                        double Area_Live_Strong_End_More18, 
                        double Area_Live_Seam_Low18, 
                        double Area_Live_Standart_Seam_More18, 
                        double Area_Live_Strong_Seam_More18, 
                        double Area_Level_Combo, 
                        double Area_Level_End, 
                        double Area_Level_Seam, 
                        double Area_OutFlat_Combo, 
                        double Area_OutFlat_Strong, 
                        double Like_Koef) {
                C_Flats_PIK1_AreasRow rowC_Flats_PIK1_AreasRow = ((C_Flats_PIK1_AreasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Short_Type,
                        Area_Total_Low18,
                        Area_Total_Standart_More18,
                        Area_Total_Strong_More18,
                        Area_Total_End_Low18,
                        Area_Total_Standart_End_More18,
                        Area_Total_Strong_End_More18,
                        Area_Total_Standart_Seam_Low18,
                        Area_Total_Standart_Seam_More18,
                        Area_Total_Strong_Seam_More18,
                        Correction_Low18,
                        Correction_More18,
                        Area_Live_Low18,
                        Area_Live_Standart_More18,
                        Area_Live_Strong_More18,
                        Area_Live_End_Low18,
                        Area_Live_Standart_End_More18,
                        Area_Live_Strong_End_More18,
                        Area_Live_Seam_Low18,
                        Area_Live_Standart_Seam_More18,
                        Area_Live_Strong_Seam_More18,
                        Area_Level_Combo,
                        Area_Level_End,
                        Area_Level_Seam,
                        Area_OutFlat_Combo,
                        Area_OutFlat_Strong,
                        Like_Koef};
                rowC_Flats_PIK1_AreasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowC_Flats_PIK1_AreasRow);
                return rowC_Flats_PIK1_AreasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRow FindById_Area(int Id_Area) {
                return ((C_Flats_PIK1_AreasRow)(this.Rows.Find(new object[] {
                            Id_Area})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                C_Flats_PIK1_AreasDataTable cln = ((C_Flats_PIK1_AreasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new C_Flats_PIK1_AreasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId_Area = base.Columns["Id_Area"];
                this.columnShort_Type = base.Columns["Short_Type"];
                this.columnArea_Total_Low18 = base.Columns["Area_Total_Low18"];
                this.columnArea_Total_Standart_More18 = base.Columns["Area_Total_Standart_More18"];
                this.columnArea_Total_Strong_More18 = base.Columns["Area_Total_Strong_More18"];
                this.columnArea_Total_End_Low18 = base.Columns["Area_Total_End_Low18"];
                this.columnArea_Total_Standart_End_More18 = base.Columns["Area_Total_Standart_End_More18"];
                this.columnArea_Total_Strong_End_More18 = base.Columns["Area_Total_Strong_End_More18"];
                this.columnArea_Total_Standart_Seam_Low18 = base.Columns["Area_Total_Standart_Seam_Low18"];
                this.columnArea_Total_Standart_Seam_More18 = base.Columns["Area_Total_Standart_Seam_More18"];
                this.columnArea_Total_Strong_Seam_More18 = base.Columns["Area_Total_Strong_Seam_More18"];
                this.columnCorrection_Low18 = base.Columns["Correction_Low18"];
                this.columnCorrection_More18 = base.Columns["Correction_More18"];
                this.columnArea_Live_Low18 = base.Columns["Area_Live_Low18"];
                this.columnArea_Live_Standart_More18 = base.Columns["Area_Live_Standart_More18"];
                this.columnArea_Live_Strong_More18 = base.Columns["Area_Live_Strong_More18"];
                this.columnArea_Live_End_Low18 = base.Columns["Area_Live_End_Low18"];
                this.columnArea_Live_Standart_End_More18 = base.Columns["Area_Live_Standart_End_More18"];
                this.columnArea_Live_Strong_End_More18 = base.Columns["Area_Live_Strong_End_More18"];
                this.columnArea_Live_Seam_Low18 = base.Columns["Area_Live_Seam_Low18"];
                this.columnArea_Live_Standart_Seam_More18 = base.Columns["Area_Live_Standart_Seam_More18"];
                this.columnArea_Live_Strong_Seam_More18 = base.Columns["Area_Live_Strong_Seam_More18"];
                this.columnArea_Level_Combo = base.Columns["Area_Level_Combo"];
                this.columnArea_Level_End = base.Columns["Area_Level_End"];
                this.columnArea_Level_Seam = base.Columns["Area_Level_Seam"];
                this.columnArea_OutFlat_Combo = base.Columns["Area_OutFlat_Combo"];
                this.columnArea_OutFlat_Strong = base.Columns["Area_OutFlat_Strong"];
                this.columnLike_Koef = base.Columns["Like_Koef"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId_Area = new global::System.Data.DataColumn("Id_Area", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Area);
                this.columnShort_Type = new global::System.Data.DataColumn("Short_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShort_Type);
                this.columnArea_Total_Low18 = new global::System.Data.DataColumn("Area_Total_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Low18);
                this.columnArea_Total_Standart_More18 = new global::System.Data.DataColumn("Area_Total_Standart_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Standart_More18);
                this.columnArea_Total_Strong_More18 = new global::System.Data.DataColumn("Area_Total_Strong_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Strong_More18);
                this.columnArea_Total_End_Low18 = new global::System.Data.DataColumn("Area_Total_End_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_End_Low18);
                this.columnArea_Total_Standart_End_More18 = new global::System.Data.DataColumn("Area_Total_Standart_End_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Standart_End_More18);
                this.columnArea_Total_Strong_End_More18 = new global::System.Data.DataColumn("Area_Total_Strong_End_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Strong_End_More18);
                this.columnArea_Total_Standart_Seam_Low18 = new global::System.Data.DataColumn("Area_Total_Standart_Seam_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Standart_Seam_Low18);
                this.columnArea_Total_Standart_Seam_More18 = new global::System.Data.DataColumn("Area_Total_Standart_Seam_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Standart_Seam_More18);
                this.columnArea_Total_Strong_Seam_More18 = new global::System.Data.DataColumn("Area_Total_Strong_Seam_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Total_Strong_Seam_More18);
                this.columnCorrection_Low18 = new global::System.Data.DataColumn("Correction_Low18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrection_Low18);
                this.columnCorrection_More18 = new global::System.Data.DataColumn("Correction_More18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrection_More18);
                this.columnArea_Live_Low18 = new global::System.Data.DataColumn("Area_Live_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Low18);
                this.columnArea_Live_Standart_More18 = new global::System.Data.DataColumn("Area_Live_Standart_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Standart_More18);
                this.columnArea_Live_Strong_More18 = new global::System.Data.DataColumn("Area_Live_Strong_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Strong_More18);
                this.columnArea_Live_End_Low18 = new global::System.Data.DataColumn("Area_Live_End_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_End_Low18);
                this.columnArea_Live_Standart_End_More18 = new global::System.Data.DataColumn("Area_Live_Standart_End_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Standart_End_More18);
                this.columnArea_Live_Strong_End_More18 = new global::System.Data.DataColumn("Area_Live_Strong_End_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Strong_End_More18);
                this.columnArea_Live_Seam_Low18 = new global::System.Data.DataColumn("Area_Live_Seam_Low18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Seam_Low18);
                this.columnArea_Live_Standart_Seam_More18 = new global::System.Data.DataColumn("Area_Live_Standart_Seam_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Standart_Seam_More18);
                this.columnArea_Live_Strong_Seam_More18 = new global::System.Data.DataColumn("Area_Live_Strong_Seam_More18", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Live_Strong_Seam_More18);
                this.columnArea_Level_Combo = new global::System.Data.DataColumn("Area_Level_Combo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Level_Combo);
                this.columnArea_Level_End = new global::System.Data.DataColumn("Area_Level_End", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Level_End);
                this.columnArea_Level_Seam = new global::System.Data.DataColumn("Area_Level_Seam", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Level_Seam);
                this.columnArea_OutFlat_Combo = new global::System.Data.DataColumn("Area_OutFlat_Combo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_OutFlat_Combo);
                this.columnArea_OutFlat_Strong = new global::System.Data.DataColumn("Area_OutFlat_Strong", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_OutFlat_Strong);
                this.columnLike_Koef = new global::System.Data.DataColumn("Like_Koef", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLike_Koef);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_Area}, true));
                this.columnId_Area.AutoIncrement = true;
                this.columnId_Area.AutoIncrementSeed = -1;
                this.columnId_Area.AutoIncrementStep = -1;
                this.columnId_Area.AllowDBNull = false;
                this.columnId_Area.ReadOnly = true;
                this.columnId_Area.Unique = true;
                this.columnShort_Type.AllowDBNull = false;
                this.columnShort_Type.MaxLength = 50;
                this.columnArea_Total_Low18.AllowDBNull = false;
                this.columnArea_Total_Standart_More18.AllowDBNull = false;
                this.columnArea_Total_Strong_More18.AllowDBNull = false;
                this.columnArea_Total_End_Low18.AllowDBNull = false;
                this.columnArea_Total_Standart_End_More18.AllowDBNull = false;
                this.columnArea_Total_Strong_End_More18.AllowDBNull = false;
                this.columnArea_Total_Standart_Seam_Low18.AllowDBNull = false;
                this.columnArea_Total_Standart_Seam_More18.AllowDBNull = false;
                this.columnArea_Total_Strong_Seam_More18.AllowDBNull = false;
                this.columnCorrection_Low18.AllowDBNull = false;
                this.columnCorrection_Low18.MaxLength = 50;
                this.columnCorrection_More18.AllowDBNull = false;
                this.columnCorrection_More18.MaxLength = 50;
                this.columnArea_Live_Low18.AllowDBNull = false;
                this.columnArea_Live_Standart_More18.AllowDBNull = false;
                this.columnArea_Live_Strong_More18.AllowDBNull = false;
                this.columnArea_Live_End_Low18.AllowDBNull = false;
                this.columnArea_Live_Standart_End_More18.AllowDBNull = false;
                this.columnArea_Live_Strong_End_More18.AllowDBNull = false;
                this.columnArea_Live_Seam_Low18.AllowDBNull = false;
                this.columnArea_Live_Standart_Seam_More18.AllowDBNull = false;
                this.columnArea_Live_Strong_Seam_More18.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRow NewC_Flats_PIK1_AreasRow() {
                return ((C_Flats_PIK1_AreasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new C_Flats_PIK1_AreasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(C_Flats_PIK1_AreasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.C_Flats_PIK1_AreasRowChanged != null)) {
                    this.C_Flats_PIK1_AreasRowChanged(this, new C_Flats_PIK1_AreasRowChangeEvent(((C_Flats_PIK1_AreasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.C_Flats_PIK1_AreasRowChanging != null)) {
                    this.C_Flats_PIK1_AreasRowChanging(this, new C_Flats_PIK1_AreasRowChangeEvent(((C_Flats_PIK1_AreasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.C_Flats_PIK1_AreasRowDeleted != null)) {
                    this.C_Flats_PIK1_AreasRowDeleted(this, new C_Flats_PIK1_AreasRowChangeEvent(((C_Flats_PIK1_AreasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.C_Flats_PIK1_AreasRowDeleting != null)) {
                    this.C_Flats_PIK1_AreasRowDeleting(this, new C_Flats_PIK1_AreasRowChangeEvent(((C_Flats_PIK1_AreasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveC_Flats_PIK1_AreasRow(C_Flats_PIK1_AreasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIK1 ds = new PIK1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "C_Flats_PIK1_AreasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class F_nn_FlatsInSectionRow : global::System.Data.DataRow {
            
            private F_nn_FlatsInSectionDataTable tableF_nn_FlatsInSection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal F_nn_FlatsInSectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF_nn_FlatsInSection = ((F_nn_FlatsInSectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Section {
                get {
                    return ((int)(this[this.tableF_nn_FlatsInSection.ID_SectionColumn]));
                }
                set {
                    this[this.tableF_nn_FlatsInSection.ID_SectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Flat {
                get {
                    return ((int)(this[this.tableF_nn_FlatsInSection.ID_FlatColumn]));
                }
                set {
                    this[this.tableF_nn_FlatsInSection.ID_FlatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexBottom {
                get {
                    return ((int)(this[this.tableF_nn_FlatsInSection.SelectedIndexBottomColumn]));
                }
                set {
                    this[this.tableF_nn_FlatsInSection.SelectedIndexBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexTop {
                get {
                    return ((int)(this[this.tableF_nn_FlatsInSection.SelectedIndexTopColumn]));
                }
                set {
                    this[this.tableF_nn_FlatsInSection.SelectedIndexTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_FlatInSection {
                get {
                    return ((int)(this[this.tableF_nn_FlatsInSection.ID_FlatInSectionColumn]));
                }
                set {
                    this[this.tableF_nn_FlatsInSection.ID_FlatInSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row C_Flats_PIK1Row {
                get {
                    return ((C_Flats_PIK1Row)(this.GetParentRow(this.Table.ParentRelations["F_nn_FlatsInSection_Flats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_nn_FlatsInSection_Flats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow FlatsInSectionsRow {
                get {
                    return ((FlatsInSectionsRow)(this.GetParentRow(this.Table.ParentRelations["F_nn_FlatsInSection_Flats1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_nn_FlatsInSection_Flats1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow C_SectionsRow {
                get {
                    return ((C_SectionsRow)(this.GetParentRow(this.Table.ParentRelations["F_nn_FlatsInSection_Sections"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_nn_FlatsInSection_Sections"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class C_Flats_PIK1Row : global::System.Data.DataRow {
            
            private C_Flats_PIK1DataTable tableC_Flats_PIK1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_Flats_PIK1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableC_Flats_PIK1 = ((C_Flats_PIK1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Flat {
                get {
                    return ((int)(this[this.tableC_Flats_PIK1.ID_FlatColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.ID_FlatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.TypeColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortType {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.ShortTypeColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.ShortTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaLive {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1.AreaLiveColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.AreaLiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaTotalStandart {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1.AreaTotalStandartColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.AreaTotalStandartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaTotalStrong {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1.AreaTotalStrongColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.AreaTotalStrongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AreaInModule {
                get {
                    return ((int)(this[this.tableC_Flats_PIK1.AreaInModuleColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.AreaInModuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexBottom {
                get {
                    return ((int)(this[this.tableC_Flats_PIK1.SelectedIndexBottomColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.SelectedIndexBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexTop {
                get {
                    return ((int)(this[this.tableC_Flats_PIK1.SelectedIndexTopColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.SelectedIndexTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkageBefore {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.LinkageBeforeColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.LinkageBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkageAfter {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.LinkageAfterColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.LinkageAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactorSmoke {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.FactorSmokeColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.FactorSmokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LightBottom {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.LightBottomColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.LightBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LightTop {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.LightTopColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.LightTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexTop {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.IndexTopColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.IndexTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexBottom {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.IndexBottomColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.IndexBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubZone {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.SubZoneColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.SubZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkageOr {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1.LinkageOrColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1.LinkageOrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow[] GetF_nn_FlatsInSectionRows() {
                if ((this.Table.ChildRelations["F_nn_FlatsInSection_Flats"] == null)) {
                    return new F_nn_FlatsInSectionRow[0];
                }
                else {
                    return ((F_nn_FlatsInSectionRow[])(base.GetChildRows(this.Table.ChildRelations["F_nn_FlatsInSection_Flats"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class C_SectionsRow : global::System.Data.DataRow {
            
            private C_SectionsDataTable tableC_Sections;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_SectionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableC_Sections = ((C_SectionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountModules {
                get {
                    return ((int)(this[this.tableC_Sections.CountModulesColumn]));
                }
                set {
                    this[this.tableC_Sections.CountModulesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    return ((string)(this[this.tableC_Sections.TypeColumn]));
                }
                set {
                    this[this.tableC_Sections.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Levels {
                get {
                    try {
                        return ((string)(this[this.tableC_Sections.LevelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Levels\' в таблице \'C_Sections\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableC_Sections.LevelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Section {
                get {
                    return ((int)(this[this.tableC_Sections.ID_SectionColumn]));
                }
                set {
                    this[this.tableC_Sections.ID_SectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLevelsNull() {
                return this.IsNull(this.tableC_Sections.LevelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLevelsNull() {
                this[this.tableC_Sections.LevelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow[] GetF_nn_FlatsInSectionRows() {
                if ((this.Table.ChildRelations["F_nn_FlatsInSection_Sections"] == null)) {
                    return new F_nn_FlatsInSectionRow[0];
                }
                else {
                    return ((F_nn_FlatsInSectionRow[])(base.GetChildRows(this.Table.ChildRelations["F_nn_FlatsInSection_Sections"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FlatsInSectionsRow : global::System.Data.DataRow {
            
            private FlatsInSectionsDataTable tableFlatsInSections;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FlatsInSectionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFlatsInSections = ((FlatsInSectionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Section {
                get {
                    return ((int)(this[this.tableFlatsInSections.ID_SectionColumn]));
                }
                set {
                    this[this.tableFlatsInSections.ID_SectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountModules {
                get {
                    return ((int)(this[this.tableFlatsInSections.CountModulesColumn]));
                }
                set {
                    this[this.tableFlatsInSections.CountModulesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeSection {
                get {
                    return ((string)(this[this.tableFlatsInSections.TypeSectionColumn]));
                }
                set {
                    this[this.tableFlatsInSections.TypeSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Levels {
                get {
                    try {
                        return ((string)(this[this.tableFlatsInSections.LevelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Levels\' в таблице \'FlatsInSections\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlatsInSections.LevelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeFlat {
                get {
                    return ((string)(this[this.tableFlatsInSections.TypeFlatColumn]));
                }
                set {
                    this[this.tableFlatsInSections.TypeFlatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Flat {
                get {
                    return ((int)(this[this.tableFlatsInSections.ID_FlatColumn]));
                }
                set {
                    this[this.tableFlatsInSections.ID_FlatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexBottom {
                get {
                    return ((int)(this[this.tableFlatsInSections.SelectedIndexBottomColumn]));
                }
                set {
                    this[this.tableFlatsInSections.SelectedIndexBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SelectedIndexTop {
                get {
                    return ((int)(this[this.tableFlatsInSections.SelectedIndexTopColumn]));
                }
                set {
                    this[this.tableFlatsInSections.SelectedIndexTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortType {
                get {
                    return ((string)(this[this.tableFlatsInSections.ShortTypeColumn]));
                }
                set {
                    this[this.tableFlatsInSections.ShortTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaLive {
                get {
                    return ((double)(this[this.tableFlatsInSections.AreaLiveColumn]));
                }
                set {
                    this[this.tableFlatsInSections.AreaLiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaTotalStandart {
                get {
                    return ((double)(this[this.tableFlatsInSections.AreaTotalStandartColumn]));
                }
                set {
                    this[this.tableFlatsInSections.AreaTotalStandartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AreaTotalStrong {
                get {
                    return ((double)(this[this.tableFlatsInSections.AreaTotalStrongColumn]));
                }
                set {
                    this[this.tableFlatsInSections.AreaTotalStrongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AreaInModule {
                get {
                    return ((int)(this[this.tableFlatsInSections.AreaInModuleColumn]));
                }
                set {
                    this[this.tableFlatsInSections.AreaInModuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Expr1 {
                get {
                    return ((int)(this[this.tableFlatsInSections.Expr1Column]));
                }
                set {
                    this[this.tableFlatsInSections.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Expr2 {
                get {
                    return ((int)(this[this.tableFlatsInSections.Expr2Column]));
                }
                set {
                    this[this.tableFlatsInSections.Expr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkageBefore {
                get {
                    return ((string)(this[this.tableFlatsInSections.LinkageBeforeColumn]));
                }
                set {
                    this[this.tableFlatsInSections.LinkageBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkageAfter {
                get {
                    return ((string)(this[this.tableFlatsInSections.LinkageAfterColumn]));
                }
                set {
                    this[this.tableFlatsInSections.LinkageAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactorSmoke {
                get {
                    return ((string)(this[this.tableFlatsInSections.FactorSmokeColumn]));
                }
                set {
                    this[this.tableFlatsInSections.FactorSmokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LightBottom {
                get {
                    return ((string)(this[this.tableFlatsInSections.LightBottomColumn]));
                }
                set {
                    this[this.tableFlatsInSections.LightBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LightTop {
                get {
                    return ((string)(this[this.tableFlatsInSections.LightTopColumn]));
                }
                set {
                    this[this.tableFlatsInSections.LightTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexTop {
                get {
                    return ((string)(this[this.tableFlatsInSections.IndexTopColumn]));
                }
                set {
                    this[this.tableFlatsInSections.IndexTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IndexBottom {
                get {
                    return ((string)(this[this.tableFlatsInSections.IndexBottomColumn]));
                }
                set {
                    this[this.tableFlatsInSections.IndexBottomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubZone {
                get {
                    try {
                        return ((string)(this[this.tableFlatsInSections.SubZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SubZone\' в таблице \'FlatsInSections\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlatsInSections.SubZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_FlatInSection {
                get {
                    return ((int)(this[this.tableFlatsInSections.ID_FlatInSectionColumn]));
                }
                set {
                    this[this.tableFlatsInSections.ID_FlatInSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLevelsNull() {
                return this.IsNull(this.tableFlatsInSections.LevelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLevelsNull() {
                this[this.tableFlatsInSections.LevelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubZoneNull() {
                return this.IsNull(this.tableFlatsInSections.SubZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubZoneNull() {
                this[this.tableFlatsInSections.SubZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow[] GetF_nn_FlatsInSectionRows() {
                if ((this.Table.ChildRelations["F_nn_FlatsInSection_Flats1"] == null)) {
                    return new F_nn_FlatsInSectionRow[0];
                }
                else {
                    return ((F_nn_FlatsInSectionRow[])(base.GetChildRows(this.Table.ChildRelations["F_nn_FlatsInSection_Flats1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class C_Flats_PIK1_AreasRow : global::System.Data.DataRow {
            
            private C_Flats_PIK1_AreasDataTable tableC_Flats_PIK1_Areas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C_Flats_PIK1_AreasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableC_Flats_PIK1_Areas = ((C_Flats_PIK1_AreasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id_Area {
                get {
                    return ((int)(this[this.tableC_Flats_PIK1_Areas.Id_AreaColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Id_AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Short_Type {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1_Areas.Short_TypeColumn]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Short_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Standart_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Strong_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_End_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_End_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_End_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Standart_End_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_End_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_End_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Strong_End_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_End_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_End_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Standart_Seam_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_Seam_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_Seam_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Standart_Seam_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_Seam_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Standart_Seam_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Total_Strong_Seam_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_Seam_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Total_Strong_Seam_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Correction_Low18 {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1_Areas.Correction_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Correction_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Correction_More18 {
                get {
                    return ((string)(this[this.tableC_Flats_PIK1_Areas.Correction_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Correction_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Standart_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Strong_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_End_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_End_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_End_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Standart_End_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_End_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_End_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Strong_End_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_End_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_End_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Seam_Low18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Seam_Low18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Seam_Low18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Standart_Seam_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_Seam_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Standart_Seam_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Live_Strong_Seam_More18 {
                get {
                    return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_Seam_More18Column]));
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Live_Strong_Seam_More18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Level_Combo {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Level_ComboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Area_Level_Combo\' в таблице \'C_Flats_PIK1_Areas\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Level_ComboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Level_End {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Level_EndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Area_Level_End\' в таблице \'C_Flats_PIK1_Areas\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Level_EndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_Level_Seam {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_Level_SeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Area_Level_Seam\' в таблице \'C_Flats_PIK1_Areas\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_Level_SeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_OutFlat_Combo {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_ComboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Area_OutFlat_Combo\' в таблице \'C_Flats_PIK1_Areas\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_ComboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Area_OutFlat_Strong {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_StrongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Area_OutFlat_Strong\' в таблице \'C_Flats_PIK1_Areas\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_StrongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Like_Koef {
                get {
                    try {
                        return ((double)(this[this.tableC_Flats_PIK1_Areas.Like_KoefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Like_Koef\' в таблице \'C_Flats_PIK1_Areas\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableC_Flats_PIK1_Areas.Like_KoefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArea_Level_ComboNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Area_Level_ComboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArea_Level_ComboNull() {
                this[this.tableC_Flats_PIK1_Areas.Area_Level_ComboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArea_Level_EndNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Area_Level_EndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArea_Level_EndNull() {
                this[this.tableC_Flats_PIK1_Areas.Area_Level_EndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArea_Level_SeamNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Area_Level_SeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArea_Level_SeamNull() {
                this[this.tableC_Flats_PIK1_Areas.Area_Level_SeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArea_OutFlat_ComboNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Area_OutFlat_ComboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArea_OutFlat_ComboNull() {
                this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_ComboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArea_OutFlat_StrongNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Area_OutFlat_StrongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArea_OutFlat_StrongNull() {
                this[this.tableC_Flats_PIK1_Areas.Area_OutFlat_StrongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLike_KoefNull() {
                return this.IsNull(this.tableC_Flats_PIK1_Areas.Like_KoefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLike_KoefNull() {
                this[this.tableC_Flats_PIK1_Areas.Like_KoefColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class F_nn_FlatsInSectionRowChangeEvent : global::System.EventArgs {
            
            private F_nn_FlatsInSectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRowChangeEvent(F_nn_FlatsInSectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public F_nn_FlatsInSectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class C_Flats_PIK1RowChangeEvent : global::System.EventArgs {
            
            private C_Flats_PIK1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1RowChangeEvent(C_Flats_PIK1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class C_SectionsRowChangeEvent : global::System.EventArgs {
            
            private C_SectionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRowChangeEvent(C_SectionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_SectionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FlatsInSectionsRowChangeEvent : global::System.EventArgs {
            
            private FlatsInSectionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRowChangeEvent(FlatsInSectionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FlatsInSectionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class C_Flats_PIK1_AreasRowChangeEvent : global::System.EventArgs {
            
            private C_Flats_PIK1_AreasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRowChangeEvent(C_Flats_PIK1_AreasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C_Flats_PIK1_AreasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AR_AreaZhuk.PIK1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class F_nn_FlatsInSectionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public F_nn_FlatsInSectionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "F_nn_FlatsInSection";
            tableMapping.ColumnMappings.Add("ID_Section", "ID_Section");
            tableMapping.ColumnMappings.Add("ID_Flat", "ID_Flat");
            tableMapping.ColumnMappings.Add("SelectedIndexBottom", "SelectedIndexBottom");
            tableMapping.ColumnMappings.Add("SelectedIndexTop", "SelectedIndexTop");
            tableMapping.ColumnMappings.Add("ID_FlatInSection", "ID_FlatInSection");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [F_nn_FlatsInSection] WHERE (([ID_Section] = @Original_ID_Section) AND ([ID_Flat] = @Original_ID_Flat) AND ([SelectedIndexBottom] = @Original_SelectedIndexBottom) AND ([SelectedIndexTop] = @Original_SelectedIndexTop) AND ([ID_FlatInSection] = @Original_ID_FlatInSection))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Section", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_FlatInSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_FlatInSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [F_nn_FlatsInSection] ([ID_Section], [ID_Flat], [SelectedIndexBottom], [SelectedIndexTop]) VALUES (@ID_Section, @ID_Flat, @SelectedIndexBottom, @SelectedIndexTop);
SELECT ID_Section, ID_Flat, SelectedIndexBottom, SelectedIndexTop, ID_FlatInSection FROM F_nn_FlatsInSection WHERE (ID_FlatInSection = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Section", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [F_nn_FlatsInSection] SET [ID_Section] = @ID_Section, [ID_Flat] = @ID_Flat, [SelectedIndexBottom] = @SelectedIndexBottom, [SelectedIndexTop] = @SelectedIndexTop WHERE (([ID_Section] = @Original_ID_Section) AND ([ID_Flat] = @Original_ID_Flat) AND ([SelectedIndexBottom] = @Original_SelectedIndexBottom) AND ([SelectedIndexTop] = @Original_SelectedIndexTop) AND ([ID_FlatInSection] = @Original_ID_FlatInSection));
SELECT ID_Section, ID_Flat, SelectedIndexBottom, SelectedIndexTop, ID_FlatInSection FROM F_nn_FlatsInSection WHERE (ID_FlatInSection = @ID_FlatInSection)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Section", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Section", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_FlatInSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_FlatInSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_FlatInSection", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_FlatInSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AR_AreaZhuk.Properties.Settings.Default.SAPRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Section, ID_Flat, SelectedIndexBottom, SelectedIndexTop, ID_Flat" +
                "InSection\r\nFROM            F_nn_FlatsInSection";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM F_nn_FlatsInSection";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ID_Flat, ID_FlatInSection, ID_Section, SelectedIndexBottom, SelectedIndexT" +
                "op FROM F_nn_FlatsInSection WHERE (ID_Section = @IdSection)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdSection", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO F_nn_FlatsInSection\r\n                         (ID_Section, ID_Flat, S" +
                "electedIndexBottom, SelectedIndexTop)\r\nVALUES        (@ID_Section,@ID_Flat,@Sele" +
                "ctedIndexBottom,@SelectedIndexTop); \r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Section", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Flat", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PIK1.F_nn_FlatsInSectionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PIK1.F_nn_FlatsInSectionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PIK1.F_nn_FlatsInSectionDataTable dataTable = new PIK1.F_nn_FlatsInSectionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PIK1.F_nn_FlatsInSectionDataTable GetFlatsInSection(int IdSection) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IdSection));
            PIK1.F_nn_FlatsInSectionDataTable dataTable = new PIK1.F_nn_FlatsInSectionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1.F_nn_FlatsInSectionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1 dataSet) {
            return this.Adapter.Update(dataSet, "F_nn_FlatsInSection");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Section, int Original_ID_Flat, int Original_SelectedIndexBottom, int Original_SelectedIndexTop, int Original_ID_FlatInSection) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Section));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Flat));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SelectedIndexBottom));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SelectedIndexTop));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_FlatInSection));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Section, int ID_Flat, int SelectedIndexBottom, int SelectedIndexTop) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Section));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Flat));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SelectedIndexBottom));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SelectedIndexTop));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Section, int ID_Flat, int SelectedIndexBottom, int SelectedIndexTop, int Original_ID_Section, int Original_ID_Flat, int Original_SelectedIndexBottom, int Original_SelectedIndexTop, int Original_ID_FlatInSection, int ID_FlatInSection) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Section));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Flat));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SelectedIndexBottom));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SelectedIndexTop));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Section));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Flat));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_SelectedIndexBottom));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SelectedIndexTop));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_FlatInSection));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_FlatInSection));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Section, int ID_Flat, int SelectedIndexBottom, int SelectedIndexTop, int Original_ID_Section, int Original_ID_Flat, int Original_SelectedIndexBottom, int Original_SelectedIndexTop, int Original_ID_FlatInSection) {
            return this.Update(ID_Section, ID_Flat, SelectedIndexBottom, SelectedIndexTop, Original_ID_Section, Original_ID_Flat, Original_SelectedIndexBottom, Original_SelectedIndexTop, Original_ID_FlatInSection, Original_ID_FlatInSection);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQuery() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertFlatInSection(int ID_Section, int ID_Flat, int SelectedIndexBottom, int SelectedIndexTop) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(ID_Section));
            command.Parameters[1].Value = ((int)(ID_Flat));
            command.Parameters[2].Value = ((int)(SelectedIndexBottom));
            command.Parameters[3].Value = ((int)(SelectedIndexTop));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class C_Flats_PIK1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public C_Flats_PIK1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "C_Flats_PIK1";
            tableMapping.ColumnMappings.Add("ID_Flat", "ID_Flat");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("ShortType", "ShortType");
            tableMapping.ColumnMappings.Add("AreaLive", "AreaLive");
            tableMapping.ColumnMappings.Add("AreaTotalStandart", "AreaTotalStandart");
            tableMapping.ColumnMappings.Add("AreaTotalStrong", "AreaTotalStrong");
            tableMapping.ColumnMappings.Add("AreaInModule", "AreaInModule");
            tableMapping.ColumnMappings.Add("SelectedIndexBottom", "SelectedIndexBottom");
            tableMapping.ColumnMappings.Add("SelectedIndexTop", "SelectedIndexTop");
            tableMapping.ColumnMappings.Add("LinkageBefore", "LinkageBefore");
            tableMapping.ColumnMappings.Add("LinkageAfter", "LinkageAfter");
            tableMapping.ColumnMappings.Add("FactorSmoke", "FactorSmoke");
            tableMapping.ColumnMappings.Add("LightBottom", "LightBottom");
            tableMapping.ColumnMappings.Add("LightTop", "LightTop");
            tableMapping.ColumnMappings.Add("IndexTop", "IndexTop");
            tableMapping.ColumnMappings.Add("IndexBottom", "IndexBottom");
            tableMapping.ColumnMappings.Add("SubZone", "SubZone");
            tableMapping.ColumnMappings.Add("LinkageOr", "LinkageOr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [C_Flats_PIK1] WHERE (([ID_Flat] = @Original_ID_Flat) AND ([Type] = @Original_Type) AND ([ShortType] = @Original_ShortType) AND ([AreaLive] = @Original_AreaLive) AND ([AreaTotalStandart] = @Original_AreaTotalStandart) AND ([AreaTotalStrong] = @Original_AreaTotalStrong) AND ([AreaInModule] = @Original_AreaInModule) AND ([SelectedIndexBottom] = @Original_SelectedIndexBottom) AND ([SelectedIndexTop] = @Original_SelectedIndexTop) AND ([LinkageBefore] = @Original_LinkageBefore) AND ([LinkageAfter] = @Original_LinkageAfter) AND ([FactorSmoke] = @Original_FactorSmoke) AND ([LightBottom] = @Original_LightBottom) AND ([LightTop] = @Original_LightTop) AND ([IndexTop] = @Original_IndexTop) AND ([IndexBottom] = @Original_IndexBottom) AND ([SubZone] = @Original_SubZone) AND ([LinkageOr] = @Original_LinkageOr))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShortType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaLive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaTotalStandart", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaTotalStrong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaInModule", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FactorSmoke", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageOr", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [C_Flats_PIK1] ([Type], [ShortType], [AreaLive], [AreaTotalStandart], [AreaTotalStrong], [AreaInModule], [SelectedIndexBottom], [SelectedIndexTop], [LinkageBefore], [LinkageAfter], [FactorSmoke], [LightBottom], [LightTop], [IndexTop], [IndexBottom], [SubZone], [LinkageOr]) VALUES (@Type, @ShortType, @AreaLive, @AreaTotalStandart, @AreaTotalStrong, @AreaInModule, @SelectedIndexBottom, @SelectedIndexTop, @LinkageBefore, @LinkageAfter, @FactorSmoke, @LightBottom, @LightTop, @IndexTop, @IndexBottom, @SubZone, @LinkageOr);
SELECT ID_Flat, Type, ShortType, AreaLive, AreaTotalStandart, AreaTotalStrong, AreaInModule, SelectedIndexBottom, SelectedIndexTop, LinkageBefore, LinkageAfter, FactorSmoke, LightBottom, LightTop, IndexTop, IndexBottom, SubZone, LinkageOr FROM C_Flats_PIK1 WHERE (ID_Flat = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaLive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStandart", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStrong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInModule", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FactorSmoke", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageOr", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [C_Flats_PIK1] SET [Type] = @Type, [ShortType] = @ShortType, [AreaLive] = " +
                "@AreaLive, [AreaTotalStandart] = @AreaTotalStandart, [AreaTotalStrong] = @AreaTo" +
                "talStrong, [AreaInModule] = @AreaInModule, [SelectedIndexBottom] = @SelectedInde" +
                "xBottom, [SelectedIndexTop] = @SelectedIndexTop, [LinkageBefore] = @LinkageBefor" +
                "e, [LinkageAfter] = @LinkageAfter, [FactorSmoke] = @FactorSmoke, [LightBottom] =" +
                " @LightBottom, [LightTop] = @LightTop, [IndexTop] = @IndexTop, [IndexBottom] = @" +
                "IndexBottom, [SubZone] = @SubZone, [LinkageOr] = @LinkageOr WHERE (([ID_Flat] = " +
                "@Original_ID_Flat) AND ([Type] = @Original_Type) AND ([ShortType] = @Original_Sh" +
                "ortType) AND ([AreaLive] = @Original_AreaLive) AND ([AreaTotalStandart] = @Origi" +
                "nal_AreaTotalStandart) AND ([AreaTotalStrong] = @Original_AreaTotalStrong) AND (" +
                "[AreaInModule] = @Original_AreaInModule) AND ([SelectedIndexBottom] = @Original_" +
                "SelectedIndexBottom) AND ([SelectedIndexTop] = @Original_SelectedIndexTop) AND (" +
                "[LinkageBefore] = @Original_LinkageBefore) AND ([LinkageAfter] = @Original_Linka" +
                "geAfter) AND ([FactorSmoke] = @Original_FactorSmoke) AND ([LightBottom] = @Origi" +
                "nal_LightBottom) AND ([LightTop] = @Original_LightTop) AND ([IndexTop] = @Origin" +
                "al_IndexTop) AND ([IndexBottom] = @Original_IndexBottom) AND ([SubZone] = @Origi" +
                "nal_SubZone) AND ([LinkageOr] = @Original_LinkageOr));\r\nSELECT ID_Flat, Type, Sh" +
                "ortType, AreaLive, AreaTotalStandart, AreaTotalStrong, AreaInModule, SelectedInd" +
                "exBottom, SelectedIndexTop, LinkageBefore, LinkageAfter, FactorSmoke, LightBotto" +
                "m, LightTop, IndexTop, IndexBottom, SubZone, LinkageOr FROM C_Flats_PIK1 WHERE (" +
                "ID_Flat = @ID_Flat)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaLive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStandart", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStrong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInModule", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FactorSmoke", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageOr", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Flat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShortType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaLive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaTotalStandart", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaTotalStrong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaInModule", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexBottom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SelectedIndexTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FactorSmoke", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexTop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexBottom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkageOr", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Flat", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AR_AreaZhuk.Properties.Settings.Default.SAPRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ID_Flat, Type, ShortType, AreaLive, AreaTotalStandart, AreaTotalStrong, AreaInModule, SelectedIndexBottom, SelectedIndexTop, LinkageBefore, LinkageAfter, 
                         FactorSmoke, LightBottom, LightTop, IndexTop, IndexBottom, SubZone, LinkageOr
FROM            C_Flats_PIK1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM C_Flats_PIK1";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        ID_Flat\r\nFROM            C_Flats_PIK1\r\nWHERE        (Type = @Type) " +
                "AND (LinkageBefore = @LinkageBefore) AND (LinkageAfter = @LinkageAfter)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageBefore", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageAfter", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT AreaInModule, AreaLive, AreaTotalStandart, AreaTotalStrong, FactorSmoke, ID_Flat, IndexBottom, IndexTop, LightBottom, LightTop, LinkageAfter, LinkageBefore, LinkageOr, SelectedIndexBottom, SelectedIndexTop, ShortType, SubZone, Type FROM C_Flats_PIK1 WHERE (ID_Flat = @IDFLAT)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDFLAT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Flat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"INSERT INTO C_Flats_PIK1
                         (Type, ShortType, AreaLive, AreaTotalStandart, AreaTotalStrong, AreaInModule, SelectedIndexBottom, SelectedIndexTop, LinkageBefore, LinkageAfter, FactorSmoke, 
                         LightBottom, LightTop, IndexTop, IndexBottom, SubZone, LinkageOr)
VALUES        (@Type,@ShortType,@AreaLive,@AreaTotalStandart,@AreaTotalStrong,@AreaInModule,@SelectedIndexBottom,@SelectedIndexTop,@LinkageBefore,@LinkageAfter,@FactorSmoke,@LightBottom,@LightTop,@IndexTop,@IndexBottom,@SubZone,@LinkageOr);     ";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortType", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaLive", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStandart", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStrong", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInModule", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageBefore", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageAfter", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FactorSmoke", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightBottom", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightTop", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexTop", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBottom", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubZone", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageOr", global::System.Data.SqlDbType.NChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"UPDATE       C_Flats_PIK1
SET                ShortType = @ShortType, AreaLive = @AreaLive, AreaTotalStandart = @AreaTotalStandart, AreaTotalStrong = @AreaTotalStrong, AreaInModule = @AreaInModule, 
                         SelectedIndexBottom = @SelectedIndexBottom, SelectedIndexTop = @SelectedIndexTop, LinkageBefore = @LinkageBefore, LinkageAfter = @LinkageAfter, 
                         FactorSmoke = @FactorSmoke, LightBottom = @LightBottom, LightTop = @LightTop, IndexTop = @IndexTop, IndexBottom = @IndexBottom, SubZone = @SubZone, 
                         LinkageOr = @LinkageOr
WHERE        (Type = @Original_Type); 
";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortType", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ShortType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaLive", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaLive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStandart", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStandart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaTotalStrong", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AreaTotalStrong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInModule", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AreaInModule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexBottom", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedIndexTop", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedIndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageBefore", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageAfter", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FactorSmoke", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FactorSmoke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightBottom", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LightBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightTop", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LightTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexTop", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IndexTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBottom", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBottom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubZone", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SubZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkageOr", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LinkageOr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PIK1.C_Flats_PIK1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PIK1.C_Flats_PIK1DataTable dataTable = new PIK1.C_Flats_PIK1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PIK1.C_Flats_PIK1DataTable GetTypeByID(int IDFLAT) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IDFLAT));
            PIK1.C_Flats_PIK1DataTable dataTable = new PIK1.C_Flats_PIK1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1.C_Flats_PIK1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1 dataSet) {
            return this.Adapter.Update(dataSet, "C_Flats_PIK1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID_Flat, 
                    string Original_Type, 
                    string Original_ShortType, 
                    double Original_AreaLive, 
                    double Original_AreaTotalStandart, 
                    double Original_AreaTotalStrong, 
                    int Original_AreaInModule, 
                    int Original_SelectedIndexBottom, 
                    int Original_SelectedIndexTop, 
                    string Original_LinkageBefore, 
                    string Original_LinkageAfter, 
                    string Original_FactorSmoke, 
                    string Original_LightBottom, 
                    string Original_LightTop, 
                    string Original_IndexTop, 
                    string Original_IndexBottom, 
                    string Original_SubZone, 
                    string Original_LinkageOr) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Flat));
            if ((Original_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Type));
            }
            if ((Original_ShortType == null)) {
                throw new global::System.ArgumentNullException("Original_ShortType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ShortType));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_AreaLive));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_AreaTotalStandart));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_AreaTotalStrong));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_AreaInModule));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_SelectedIndexBottom));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SelectedIndexTop));
            if ((Original_LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageBefore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_LinkageBefore));
            }
            if ((Original_LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageAfter");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_LinkageAfter));
            }
            if ((Original_FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("Original_FactorSmoke");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_FactorSmoke));
            }
            if ((Original_LightBottom == null)) {
                throw new global::System.ArgumentNullException("Original_LightBottom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_LightBottom));
            }
            if ((Original_LightTop == null)) {
                throw new global::System.ArgumentNullException("Original_LightTop");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_LightTop));
            }
            if ((Original_IndexTop == null)) {
                throw new global::System.ArgumentNullException("Original_IndexTop");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_IndexTop));
            }
            if ((Original_IndexBottom == null)) {
                throw new global::System.ArgumentNullException("Original_IndexBottom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_IndexBottom));
            }
            if ((Original_SubZone == null)) {
                throw new global::System.ArgumentNullException("Original_SubZone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_SubZone));
            }
            if ((Original_LinkageOr == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageOr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_LinkageOr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Type, 
                    string ShortType, 
                    double AreaLive, 
                    double AreaTotalStandart, 
                    double AreaTotalStrong, 
                    int AreaInModule, 
                    int SelectedIndexBottom, 
                    int SelectedIndexTop, 
                    string LinkageBefore, 
                    string LinkageAfter, 
                    string FactorSmoke, 
                    string LightBottom, 
                    string LightTop, 
                    string IndexTop, 
                    string IndexBottom, 
                    string SubZone, 
                    string LinkageOr) {
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Type));
            }
            if ((ShortType == null)) {
                throw new global::System.ArgumentNullException("ShortType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ShortType));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(AreaLive));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(AreaTotalStandart));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(AreaTotalStrong));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(AreaInModule));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(SelectedIndexBottom));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(SelectedIndexTop));
            if ((LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("LinkageBefore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LinkageBefore));
            }
            if ((LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("LinkageAfter");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(LinkageAfter));
            }
            if ((FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("FactorSmoke");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(FactorSmoke));
            }
            if ((LightBottom == null)) {
                throw new global::System.ArgumentNullException("LightBottom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(LightBottom));
            }
            if ((LightTop == null)) {
                throw new global::System.ArgumentNullException("LightTop");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(LightTop));
            }
            if ((IndexTop == null)) {
                throw new global::System.ArgumentNullException("IndexTop");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(IndexTop));
            }
            if ((IndexBottom == null)) {
                throw new global::System.ArgumentNullException("IndexBottom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(IndexBottom));
            }
            if ((SubZone == null)) {
                throw new global::System.ArgumentNullException("SubZone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SubZone));
            }
            if ((LinkageOr == null)) {
                throw new global::System.ArgumentNullException("LinkageOr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LinkageOr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Type, 
                    string ShortType, 
                    double AreaLive, 
                    double AreaTotalStandart, 
                    double AreaTotalStrong, 
                    int AreaInModule, 
                    int SelectedIndexBottom, 
                    int SelectedIndexTop, 
                    string LinkageBefore, 
                    string LinkageAfter, 
                    string FactorSmoke, 
                    string LightBottom, 
                    string LightTop, 
                    string IndexTop, 
                    string IndexBottom, 
                    string SubZone, 
                    string LinkageOr, 
                    int Original_ID_Flat, 
                    string Original_Type, 
                    string Original_ShortType, 
                    double Original_AreaLive, 
                    double Original_AreaTotalStandart, 
                    double Original_AreaTotalStrong, 
                    int Original_AreaInModule, 
                    int Original_SelectedIndexBottom, 
                    int Original_SelectedIndexTop, 
                    string Original_LinkageBefore, 
                    string Original_LinkageAfter, 
                    string Original_FactorSmoke, 
                    string Original_LightBottom, 
                    string Original_LightTop, 
                    string Original_IndexTop, 
                    string Original_IndexBottom, 
                    string Original_SubZone, 
                    string Original_LinkageOr, 
                    int ID_Flat) {
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Type));
            }
            if ((ShortType == null)) {
                throw new global::System.ArgumentNullException("ShortType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ShortType));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(AreaLive));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(AreaTotalStandart));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(AreaTotalStrong));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(AreaInModule));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(SelectedIndexBottom));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(SelectedIndexTop));
            if ((LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("LinkageBefore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LinkageBefore));
            }
            if ((LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("LinkageAfter");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(LinkageAfter));
            }
            if ((FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("FactorSmoke");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(FactorSmoke));
            }
            if ((LightBottom == null)) {
                throw new global::System.ArgumentNullException("LightBottom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(LightBottom));
            }
            if ((LightTop == null)) {
                throw new global::System.ArgumentNullException("LightTop");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(LightTop));
            }
            if ((IndexTop == null)) {
                throw new global::System.ArgumentNullException("IndexTop");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(IndexTop));
            }
            if ((IndexBottom == null)) {
                throw new global::System.ArgumentNullException("IndexBottom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(IndexBottom));
            }
            if ((SubZone == null)) {
                throw new global::System.ArgumentNullException("SubZone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SubZone));
            }
            if ((LinkageOr == null)) {
                throw new global::System.ArgumentNullException("LinkageOr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LinkageOr));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ID_Flat));
            if ((Original_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Type));
            }
            if ((Original_ShortType == null)) {
                throw new global::System.ArgumentNullException("Original_ShortType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ShortType));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_AreaLive));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_AreaTotalStandart));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_AreaTotalStrong));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_AreaInModule));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_SelectedIndexBottom));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_SelectedIndexTop));
            if ((Original_LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageBefore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_LinkageBefore));
            }
            if ((Original_LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageAfter");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_LinkageAfter));
            }
            if ((Original_FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("Original_FactorSmoke");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_FactorSmoke));
            }
            if ((Original_LightBottom == null)) {
                throw new global::System.ArgumentNullException("Original_LightBottom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_LightBottom));
            }
            if ((Original_LightTop == null)) {
                throw new global::System.ArgumentNullException("Original_LightTop");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LightTop));
            }
            if ((Original_IndexTop == null)) {
                throw new global::System.ArgumentNullException("Original_IndexTop");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_IndexTop));
            }
            if ((Original_IndexBottom == null)) {
                throw new global::System.ArgumentNullException("Original_IndexBottom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_IndexBottom));
            }
            if ((Original_SubZone == null)) {
                throw new global::System.ArgumentNullException("Original_SubZone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_SubZone));
            }
            if ((Original_LinkageOr == null)) {
                throw new global::System.ArgumentNullException("Original_LinkageOr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_LinkageOr));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ID_Flat));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Type, 
                    string ShortType, 
                    double AreaLive, 
                    double AreaTotalStandart, 
                    double AreaTotalStrong, 
                    int AreaInModule, 
                    int SelectedIndexBottom, 
                    int SelectedIndexTop, 
                    string LinkageBefore, 
                    string LinkageAfter, 
                    string FactorSmoke, 
                    string LightBottom, 
                    string LightTop, 
                    string IndexTop, 
                    string IndexBottom, 
                    string SubZone, 
                    string LinkageOr, 
                    int Original_ID_Flat, 
                    string Original_Type, 
                    string Original_ShortType, 
                    double Original_AreaLive, 
                    double Original_AreaTotalStandart, 
                    double Original_AreaTotalStrong, 
                    int Original_AreaInModule, 
                    int Original_SelectedIndexBottom, 
                    int Original_SelectedIndexTop, 
                    string Original_LinkageBefore, 
                    string Original_LinkageAfter, 
                    string Original_FactorSmoke, 
                    string Original_LightBottom, 
                    string Original_LightTop, 
                    string Original_IndexTop, 
                    string Original_IndexBottom, 
                    string Original_SubZone, 
                    string Original_LinkageOr) {
            return this.Update(Type, ShortType, AreaLive, AreaTotalStandart, AreaTotalStrong, AreaInModule, SelectedIndexBottom, SelectedIndexTop, LinkageBefore, LinkageAfter, FactorSmoke, LightBottom, LightTop, IndexTop, IndexBottom, SubZone, LinkageOr, Original_ID_Flat, Original_Type, Original_ShortType, Original_AreaLive, Original_AreaTotalStandart, Original_AreaTotalStrong, Original_AreaInModule, Original_SelectedIndexBottom, Original_SelectedIndexTop, Original_LinkageBefore, Original_LinkageAfter, Original_FactorSmoke, Original_LightBottom, Original_LightTop, Original_IndexTop, Original_IndexBottom, Original_SubZone, Original_LinkageOr, Original_ID_Flat);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQuery() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetIdFlat(string Type, string LinkageBefore, string LinkageAfter) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[0].Value = ((string)(Type));
            }
            if ((LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("LinkageBefore");
            }
            else {
                command.Parameters[1].Value = ((string)(LinkageBefore));
            }
            if ((LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("LinkageAfter");
            }
            else {
                command.Parameters[2].Value = ((string)(LinkageAfter));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertFlat(
                    string Type, 
                    string ShortType, 
                    double AreaLive, 
                    double AreaTotalStandart, 
                    double AreaTotalStrong, 
                    int AreaInModule, 
                    int SelectedIndexBottom, 
                    int SelectedIndexTop, 
                    string LinkageBefore, 
                    string LinkageAfter, 
                    string FactorSmoke, 
                    string LightBottom, 
                    string LightTop, 
                    string IndexTop, 
                    string IndexBottom, 
                    string SubZone, 
                    string LinkageOr) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[0].Value = ((string)(Type));
            }
            if ((ShortType == null)) {
                throw new global::System.ArgumentNullException("ShortType");
            }
            else {
                command.Parameters[1].Value = ((string)(ShortType));
            }
            command.Parameters[2].Value = ((double)(AreaLive));
            command.Parameters[3].Value = ((double)(AreaTotalStandart));
            command.Parameters[4].Value = ((double)(AreaTotalStrong));
            command.Parameters[5].Value = ((int)(AreaInModule));
            command.Parameters[6].Value = ((int)(SelectedIndexBottom));
            command.Parameters[7].Value = ((int)(SelectedIndexTop));
            if ((LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("LinkageBefore");
            }
            else {
                command.Parameters[8].Value = ((string)(LinkageBefore));
            }
            if ((LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("LinkageAfter");
            }
            else {
                command.Parameters[9].Value = ((string)(LinkageAfter));
            }
            if ((FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("FactorSmoke");
            }
            else {
                command.Parameters[10].Value = ((string)(FactorSmoke));
            }
            if ((LightBottom == null)) {
                throw new global::System.ArgumentNullException("LightBottom");
            }
            else {
                command.Parameters[11].Value = ((string)(LightBottom));
            }
            if ((LightTop == null)) {
                throw new global::System.ArgumentNullException("LightTop");
            }
            else {
                command.Parameters[12].Value = ((string)(LightTop));
            }
            if ((IndexTop == null)) {
                throw new global::System.ArgumentNullException("IndexTop");
            }
            else {
                command.Parameters[13].Value = ((string)(IndexTop));
            }
            if ((IndexBottom == null)) {
                throw new global::System.ArgumentNullException("IndexBottom");
            }
            else {
                command.Parameters[14].Value = ((string)(IndexBottom));
            }
            if ((SubZone == null)) {
                throw new global::System.ArgumentNullException("SubZone");
            }
            else {
                command.Parameters[15].Value = ((string)(SubZone));
            }
            if ((LinkageOr == null)) {
                throw new global::System.ArgumentNullException("LinkageOr");
            }
            else {
                command.Parameters[16].Value = ((string)(LinkageOr));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateFlat(
                    string ShortType, 
                    double AreaLive, 
                    double AreaTotalStandart, 
                    double AreaTotalStrong, 
                    int AreaInModule, 
                    int SelectedIndexBottom, 
                    int SelectedIndexTop, 
                    string LinkageBefore, 
                    string LinkageAfter, 
                    string FactorSmoke, 
                    string LightBottom, 
                    string LightTop, 
                    string IndexTop, 
                    string IndexBottom, 
                    string SubZone, 
                    string LinkageOr, 
                    string Original_Type) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((ShortType == null)) {
                throw new global::System.ArgumentNullException("ShortType");
            }
            else {
                command.Parameters[0].Value = ((string)(ShortType));
            }
            command.Parameters[1].Value = ((double)(AreaLive));
            command.Parameters[2].Value = ((double)(AreaTotalStandart));
            command.Parameters[3].Value = ((double)(AreaTotalStrong));
            command.Parameters[4].Value = ((int)(AreaInModule));
            command.Parameters[5].Value = ((int)(SelectedIndexBottom));
            command.Parameters[6].Value = ((int)(SelectedIndexTop));
            if ((LinkageBefore == null)) {
                throw new global::System.ArgumentNullException("LinkageBefore");
            }
            else {
                command.Parameters[7].Value = ((string)(LinkageBefore));
            }
            if ((LinkageAfter == null)) {
                throw new global::System.ArgumentNullException("LinkageAfter");
            }
            else {
                command.Parameters[8].Value = ((string)(LinkageAfter));
            }
            if ((FactorSmoke == null)) {
                throw new global::System.ArgumentNullException("FactorSmoke");
            }
            else {
                command.Parameters[9].Value = ((string)(FactorSmoke));
            }
            if ((LightBottom == null)) {
                throw new global::System.ArgumentNullException("LightBottom");
            }
            else {
                command.Parameters[10].Value = ((string)(LightBottom));
            }
            if ((LightTop == null)) {
                throw new global::System.ArgumentNullException("LightTop");
            }
            else {
                command.Parameters[11].Value = ((string)(LightTop));
            }
            if ((IndexTop == null)) {
                throw new global::System.ArgumentNullException("IndexTop");
            }
            else {
                command.Parameters[12].Value = ((string)(IndexTop));
            }
            if ((IndexBottom == null)) {
                throw new global::System.ArgumentNullException("IndexBottom");
            }
            else {
                command.Parameters[13].Value = ((string)(IndexBottom));
            }
            if ((SubZone == null)) {
                throw new global::System.ArgumentNullException("SubZone");
            }
            else {
                command.Parameters[14].Value = ((string)(SubZone));
            }
            if ((LinkageOr == null)) {
                throw new global::System.ArgumentNullException("LinkageOr");
            }
            else {
                command.Parameters[15].Value = ((string)(LinkageOr));
            }
            if ((Original_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Type");
            }
            else {
                command.Parameters[16].Value = ((string)(Original_Type));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class C_SectionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public C_SectionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "C_Sections";
            tableMapping.ColumnMappings.Add("CountModules", "CountModules");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Levels", "Levels");
            tableMapping.ColumnMappings.Add("ID_Section", "ID_Section");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AR_AreaZhuk.Properties.Settings.Default.SAPRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Section, CountModules, Type, Levels\r\nFROM            C_Sections";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM C_Sections";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT CountModules, ID_Section, Levels, Type FROM C_Sections WHERE (Levels = @Le" +
                "vel) AND (Type = @Type) AND (CountModules = @CountModule)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Level", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Levels", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountModule", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CountModules", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO C_Sections\r\n                         (CountModules, Type, Levels)\r\nVA" +
                "LUES        (@CountModules,@Type,@Levels);  \r\nSELECT SCOPE_IDENTITY()";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountModules", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CountModules", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Levels", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Levels", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PIK1.C_SectionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PIK1.C_SectionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PIK1.C_SectionsDataTable dataTable = new PIK1.C_SectionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PIK1.C_SectionsDataTable GetSectionByID(string Level, string Type, int CountModule) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Level == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Level));
            }
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Type));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(CountModule));
            PIK1.C_SectionsDataTable dataTable = new PIK1.C_SectionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQuery() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertSection(int CountModules, string Type, string Levels) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(CountModules));
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[1].Value = ((string)(Type));
            }
            if ((Levels == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Levels));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FlatsInSectionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlatsInSectionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FlatsInSections";
            tableMapping.ColumnMappings.Add("ID_Section", "ID_Section");
            tableMapping.ColumnMappings.Add("CountModules", "CountModules");
            tableMapping.ColumnMappings.Add("TypeSection", "TypeSection");
            tableMapping.ColumnMappings.Add("Levels", "Levels");
            tableMapping.ColumnMappings.Add("TypeFlat", "TypeFlat");
            tableMapping.ColumnMappings.Add("ID_Flat", "ID_Flat");
            tableMapping.ColumnMappings.Add("SelectedIndexBottom", "SelectedIndexBottom");
            tableMapping.ColumnMappings.Add("SelectedIndexTop", "SelectedIndexTop");
            tableMapping.ColumnMappings.Add("ShortType", "ShortType");
            tableMapping.ColumnMappings.Add("AreaLive", "AreaLive");
            tableMapping.ColumnMappings.Add("AreaTotalStandart", "AreaTotalStandart");
            tableMapping.ColumnMappings.Add("AreaTotalStrong", "AreaTotalStrong");
            tableMapping.ColumnMappings.Add("AreaInModule", "AreaInModule");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("Expr2", "Expr2");
            tableMapping.ColumnMappings.Add("LinkageBefore", "LinkageBefore");
            tableMapping.ColumnMappings.Add("LinkageAfter", "LinkageAfter");
            tableMapping.ColumnMappings.Add("FactorSmoke", "FactorSmoke");
            tableMapping.ColumnMappings.Add("LightBottom", "LightBottom");
            tableMapping.ColumnMappings.Add("LightTop", "LightTop");
            tableMapping.ColumnMappings.Add("IndexTop", "IndexTop");
            tableMapping.ColumnMappings.Add("IndexBottom", "IndexBottom");
            tableMapping.ColumnMappings.Add("SubZone", "SubZone");
            tableMapping.ColumnMappings.Add("ID_FlatInSection", "ID_FlatInSection");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AR_AreaZhuk.Properties.Settings.Default.SAPRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        C_Sections.ID_Section, C_Sections.CountModules, C_Sections.Type AS TypeSection, C_Sections.Levels, C_Flats_PIK1.Type AS TypeFlat, C_Flats_PIK1.ID_Flat, 
                         F_nn_FlatsInSection.SelectedIndexBottom, F_nn_FlatsInSection.SelectedIndexTop, C_Flats_PIK1.ShortType, C_Flats_PIK1.AreaLive, 
                         C_Flats_PIK1.AreaTotalStandart, C_Flats_PIK1.AreaTotalStrong, C_Flats_PIK1.AreaInModule, C_Flats_PIK1.SelectedIndexBottom AS Expr1, 
                         C_Flats_PIK1.SelectedIndexTop AS Expr2, C_Flats_PIK1.LinkageBefore, C_Flats_PIK1.LinkageAfter, C_Flats_PIK1.FactorSmoke, C_Flats_PIK1.LightBottom, 
                         C_Flats_PIK1.LightTop, C_Flats_PIK1.IndexTop, C_Flats_PIK1.IndexBottom, C_Flats_PIK1.SubZone, F_nn_FlatsInSection.ID_FlatInSection
FROM            C_Flats_PIK1 INNER JOIN
                         F_nn_FlatsInSection ON C_Flats_PIK1.ID_Flat = F_nn_FlatsInSection.ID_Flat INNER JOIN
                         C_Sections ON F_nn_FlatsInSection.ID_Section = C_Sections.ID_Section";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        C_Sections.ID_Section, C_Sections.CountModules, C_Sections.Type AS TypeSection, C_Sections.Levels, C_Flats_PIK1.Type AS TypeFlat, C_Flats_PIK1.ID_Flat, 
                         F_nn_FlatsInSection.SelectedIndexBottom, F_nn_FlatsInSection.SelectedIndexTop
FROM            C_Flats_PIK1 INNER JOIN
                         F_nn_FlatsInSection ON C_Flats_PIK1.ID_Flat = F_nn_FlatsInSection.ID_Flat INNER JOIN
                         C_Sections ON F_nn_FlatsInSection.ID_Section = C_Sections.ID_Section
WHERE        (C_Sections.ID_Section = @IDSECTION)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSECTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Section", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        C_Sections.ID_Section, C_Sections.CountModules, C_Sections.Type AS TypeSection, C_Sections.Levels, C_Flats_PIK1.Type AS TypeFlat, C_Flats_PIK1.ID_Flat, 
                         F_nn_FlatsInSection.SelectedIndexBottom, F_nn_FlatsInSection.SelectedIndexTop, C_Flats_PIK1.ShortType, C_Flats_PIK1.AreaLive, 
                         C_Flats_PIK1.AreaTotalStandart, C_Flats_PIK1.AreaTotalStrong, C_Flats_PIK1.AreaInModule, C_Flats_PIK1.SelectedIndexBottom AS Expr1, 
                         C_Flats_PIK1.SelectedIndexTop AS Expr2, C_Flats_PIK1.LinkageBefore, C_Flats_PIK1.LinkageAfter, C_Flats_PIK1.FactorSmoke, C_Flats_PIK1.LightBottom, 
                         C_Flats_PIK1.LightTop, C_Flats_PIK1.IndexTop, C_Flats_PIK1.IndexBottom, C_Flats_PIK1.SubZone, F_nn_FlatsInSection.ID_FlatInSection
FROM            C_Flats_PIK1 INNER JOIN
                         F_nn_FlatsInSection ON C_Flats_PIK1.ID_Flat = F_nn_FlatsInSection.ID_Flat INNER JOIN
                         C_Sections ON F_nn_FlatsInSection.ID_Section = C_Sections.ID_Section
WHERE        (C_Sections.CountModules = @CountModules) AND (C_Sections.Type = @Type) AND (C_Sections.Levels = @Levels)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountModules", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CountModules", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TypeSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Levels", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Levels", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PIK1.FlatsInSectionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PIK1.FlatsInSectionsDataTable dataTable = new PIK1.FlatsInSectionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PIK1.FlatsInSectionsDataTable GetFlatsInSection(int IDSECTION) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IDSECTION));
            PIK1.FlatsInSectionsDataTable dataTable = new PIK1.FlatsInSectionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PIK1.FlatsInSectionsDataTable GetFlatsInTypeSection(int CountModules, string Type, string Levels) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CountModules));
            if ((Type == null)) {
                throw new global::System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Type));
            }
            if ((Levels == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Levels));
            }
            PIK1.FlatsInSectionsDataTable dataTable = new PIK1.FlatsInSectionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class C_Flats_PIK1_AreasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public C_Flats_PIK1_AreasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "C_Flats_PIK1_Areas";
            tableMapping.ColumnMappings.Add("Id_Area", "Id_Area");
            tableMapping.ColumnMappings.Add("Short_Type", "Short_Type");
            tableMapping.ColumnMappings.Add("Area_Total_Low18", "Area_Total_Low18");
            tableMapping.ColumnMappings.Add("Area_Total_Standart_More18", "Area_Total_Standart_More18");
            tableMapping.ColumnMappings.Add("Area_Total_Strong_More18", "Area_Total_Strong_More18");
            tableMapping.ColumnMappings.Add("Area_Total_End_Low18", "Area_Total_End_Low18");
            tableMapping.ColumnMappings.Add("Area_Total_Standart_End_More18", "Area_Total_Standart_End_More18");
            tableMapping.ColumnMappings.Add("Area_Total_Strong_End_More18", "Area_Total_Strong_End_More18");
            tableMapping.ColumnMappings.Add("Area_Total_Standart_Seam_Low18", "Area_Total_Standart_Seam_Low18");
            tableMapping.ColumnMappings.Add("Area_Total_Standart_Seam_More18", "Area_Total_Standart_Seam_More18");
            tableMapping.ColumnMappings.Add("Area_Total_Strong_Seam_More18", "Area_Total_Strong_Seam_More18");
            tableMapping.ColumnMappings.Add("Correction_Low18", "Correction_Low18");
            tableMapping.ColumnMappings.Add("Correction_More18", "Correction_More18");
            tableMapping.ColumnMappings.Add("Area_Live_Low18", "Area_Live_Low18");
            tableMapping.ColumnMappings.Add("Area_Live_Standart_More18", "Area_Live_Standart_More18");
            tableMapping.ColumnMappings.Add("Area_Live_Strong_More18", "Area_Live_Strong_More18");
            tableMapping.ColumnMappings.Add("Area_Live_End_Low18", "Area_Live_End_Low18");
            tableMapping.ColumnMappings.Add("Area_Live_Standart_End_More18", "Area_Live_Standart_End_More18");
            tableMapping.ColumnMappings.Add("Area_Live_Strong_End_More18", "Area_Live_Strong_End_More18");
            tableMapping.ColumnMappings.Add("Area_Live_Seam_Low18", "Area_Live_Seam_Low18");
            tableMapping.ColumnMappings.Add("Area_Live_Standart_Seam_More18", "Area_Live_Standart_Seam_More18");
            tableMapping.ColumnMappings.Add("Area_Live_Strong_Seam_More18", "Area_Live_Strong_Seam_More18");
            tableMapping.ColumnMappings.Add("Area_Level_Combo", "Area_Level_Combo");
            tableMapping.ColumnMappings.Add("Area_Level_End", "Area_Level_End");
            tableMapping.ColumnMappings.Add("Area_Level_Seam", "Area_Level_Seam");
            tableMapping.ColumnMappings.Add("Area_OutFlat_Combo", "Area_OutFlat_Combo");
            tableMapping.ColumnMappings.Add("Area_OutFlat_Strong", "Area_OutFlat_Strong");
            tableMapping.ColumnMappings.Add("Like_Koef", "Like_Koef");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [C_Flats_PIK1_Areas] WHERE (([Id_Area] = @Original_Id_Area) AND ([Sho" +
                "rt_Type] = @Original_Short_Type) AND ([Area_Total_Low18] = @Original_Area_Total_" +
                "Low18) AND ([Area_Total_Standart_More18] = @Original_Area_Total_Standart_More18)" +
                " AND ([Area_Total_Strong_More18] = @Original_Area_Total_Strong_More18) AND ([Are" +
                "a_Total_End_Low18] = @Original_Area_Total_End_Low18) AND ([Area_Total_Standart_E" +
                "nd_More18] = @Original_Area_Total_Standart_End_More18) AND ([Area_Total_Strong_E" +
                "nd_More18] = @Original_Area_Total_Strong_End_More18) AND ([Area_Total_Standart_S" +
                "eam_Low18] = @Original_Area_Total_Standart_Seam_Low18) AND ([Area_Total_Standart" +
                "_Seam_More18] = @Original_Area_Total_Standart_Seam_More18) AND ([Area_Total_Stro" +
                "ng_Seam_More18] = @Original_Area_Total_Strong_Seam_More18) AND ([Correction_Low1" +
                "8] = @Original_Correction_Low18) AND ([Correction_More18] = @Original_Correction" +
                "_More18) AND ([Area_Live_Low18] = @Original_Area_Live_Low18) AND ([Area_Live_Sta" +
                "ndart_More18] = @Original_Area_Live_Standart_More18) AND ([Area_Live_Strong_More" +
                "18] = @Original_Area_Live_Strong_More18) AND ([Area_Live_End_Low18] = @Original_" +
                "Area_Live_End_Low18) AND ([Area_Live_Standart_End_More18] = @Original_Area_Live_" +
                "Standart_End_More18) AND ([Area_Live_Strong_End_More18] = @Original_Area_Live_St" +
                "rong_End_More18) AND ([Area_Live_Seam_Low18] = @Original_Area_Live_Seam_Low18) A" +
                "ND ([Area_Live_Standart_Seam_More18] = @Original_Area_Live_Standart_Seam_More18)" +
                " AND ([Area_Live_Strong_Seam_More18] = @Original_Area_Live_Strong_Seam_More18) A" +
                "ND ((@IsNull_Area_Level_Combo = 1 AND [Area_Level_Combo] IS NULL) OR ([Area_Leve" +
                "l_Combo] = @Original_Area_Level_Combo)) AND ((@IsNull_Area_Level_End = 1 AND [Ar" +
                "ea_Level_End] IS NULL) OR ([Area_Level_End] = @Original_Area_Level_End)) AND ((@" +
                "IsNull_Area_Level_Seam = 1 AND [Area_Level_Seam] IS NULL) OR ([Area_Level_Seam] " +
                "= @Original_Area_Level_Seam)) AND ((@IsNull_Area_OutFlat_Combo = 1 AND [Area_Out" +
                "Flat_Combo] IS NULL) OR ([Area_OutFlat_Combo] = @Original_Area_OutFlat_Combo)) A" +
                "ND ((@IsNull_Area_OutFlat_Strong = 1 AND [Area_OutFlat_Strong] IS NULL) OR ([Are" +
                "a_OutFlat_Strong] = @Original_Area_OutFlat_Strong)) AND ((@IsNull_Like_Koef = 1 " +
                "AND [Like_Koef] IS NULL) OR ([Like_Koef] = @Original_Like_Koef)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Area", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Area", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Short_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Short_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_End_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Correction_Low18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Correction_More18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_End_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Seam_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_Combo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_End", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_End", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_Seam", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_Seam", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_OutFlat_Combo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_OutFlat_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_OutFlat_Strong", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_OutFlat_Strong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Like_Koef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Like_Koef", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [C_Flats_PIK1_Areas] ([Short_Type], [Area_Total_Low18], [Area_Total_S" +
                "tandart_More18], [Area_Total_Strong_More18], [Area_Total_End_Low18], [Area_Total" +
                "_Standart_End_More18], [Area_Total_Strong_End_More18], [Area_Total_Standart_Seam" +
                "_Low18], [Area_Total_Standart_Seam_More18], [Area_Total_Strong_Seam_More18], [Co" +
                "rrection_Low18], [Correction_More18], [Area_Live_Low18], [Area_Live_Standart_Mor" +
                "e18], [Area_Live_Strong_More18], [Area_Live_End_Low18], [Area_Live_Standart_End_" +
                "More18], [Area_Live_Strong_End_More18], [Area_Live_Seam_Low18], [Area_Live_Stand" +
                "art_Seam_More18], [Area_Live_Strong_Seam_More18], [Area_Level_Combo], [Area_Leve" +
                "l_End], [Area_Level_Seam], [Area_OutFlat_Combo], [Area_OutFlat_Strong], [Like_Ko" +
                "ef]) VALUES (@Short_Type, @Area_Total_Low18, @Area_Total_Standart_More18, @Area_" +
                "Total_Strong_More18, @Area_Total_End_Low18, @Area_Total_Standart_End_More18, @Ar" +
                "ea_Total_Strong_End_More18, @Area_Total_Standart_Seam_Low18, @Area_Total_Standar" +
                "t_Seam_More18, @Area_Total_Strong_Seam_More18, @Correction_Low18, @Correction_Mo" +
                "re18, @Area_Live_Low18, @Area_Live_Standart_More18, @Area_Live_Strong_More18, @A" +
                "rea_Live_End_Low18, @Area_Live_Standart_End_More18, @Area_Live_Strong_End_More18" +
                ", @Area_Live_Seam_Low18, @Area_Live_Standart_Seam_More18, @Area_Live_Strong_Seam" +
                "_More18, @Area_Level_Combo, @Area_Level_End, @Area_Level_Seam, @Area_OutFlat_Com" +
                "bo, @Area_OutFlat_Strong, @Like_Koef);\r\nSELECT Id_Area, Short_Type, Area_Total_L" +
                "ow18, Area_Total_Standart_More18, Area_Total_Strong_More18, Area_Total_End_Low18" +
                ", Area_Total_Standart_End_More18, Area_Total_Strong_End_More18, Area_Total_Stand" +
                "art_Seam_Low18, Area_Total_Standart_Seam_More18, Area_Total_Strong_Seam_More18, " +
                "Correction_Low18, Correction_More18, Area_Live_Low18, Area_Live_Standart_More18," +
                " Area_Live_Strong_More18, Area_Live_End_Low18, Area_Live_Standart_End_More18, Ar" +
                "ea_Live_Strong_End_More18, Area_Live_Seam_Low18, Area_Live_Standart_Seam_More18," +
                " Area_Live_Strong_Seam_More18, Area_Level_Combo, Area_Level_End, Area_Level_Seam" +
                ", Area_OutFlat_Combo, Area_OutFlat_Strong, Like_Koef FROM C_Flats_PIK1_Areas WHE" +
                "RE (Id_Area = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Short_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Short_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_Low18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_More18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_End", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Seam", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Strong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Like_Koef", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [C_Flats_PIK1_Areas] SET [Short_Type] = @Short_Type, [Area_Total_Low18] = " +
                "@Area_Total_Low18, [Area_Total_Standart_More18] = @Area_Total_Standart_More18, [" +
                "Area_Total_Strong_More18] = @Area_Total_Strong_More18, [Area_Total_End_Low18] = " +
                "@Area_Total_End_Low18, [Area_Total_Standart_End_More18] = @Area_Total_Standart_E" +
                "nd_More18, [Area_Total_Strong_End_More18] = @Area_Total_Strong_End_More18, [Area" +
                "_Total_Standart_Seam_Low18] = @Area_Total_Standart_Seam_Low18, [Area_Total_Stand" +
                "art_Seam_More18] = @Area_Total_Standart_Seam_More18, [Area_Total_Strong_Seam_Mor" +
                "e18] = @Area_Total_Strong_Seam_More18, [Correction_Low18] = @Correction_Low18, [" +
                "Correction_More18] = @Correction_More18, [Area_Live_Low18] = @Area_Live_Low18, [" +
                "Area_Live_Standart_More18] = @Area_Live_Standart_More18, [Area_Live_Strong_More1" +
                "8] = @Area_Live_Strong_More18, [Area_Live_End_Low18] = @Area_Live_End_Low18, [Ar" +
                "ea_Live_Standart_End_More18] = @Area_Live_Standart_End_More18, [Area_Live_Strong" +
                "_End_More18] = @Area_Live_Strong_End_More18, [Area_Live_Seam_Low18] = @Area_Live" +
                "_Seam_Low18, [Area_Live_Standart_Seam_More18] = @Area_Live_Standart_Seam_More18," +
                " [Area_Live_Strong_Seam_More18] = @Area_Live_Strong_Seam_More18, [Area_Level_Com" +
                "bo] = @Area_Level_Combo, [Area_Level_End] = @Area_Level_End, [Area_Level_Seam] =" +
                " @Area_Level_Seam, [Area_OutFlat_Combo] = @Area_OutFlat_Combo, [Area_OutFlat_Str" +
                "ong] = @Area_OutFlat_Strong, [Like_Koef] = @Like_Koef WHERE (([Id_Area] = @Origi" +
                "nal_Id_Area) AND ([Short_Type] = @Original_Short_Type) AND ([Area_Total_Low18] =" +
                " @Original_Area_Total_Low18) AND ([Area_Total_Standart_More18] = @Original_Area_" +
                "Total_Standart_More18) AND ([Area_Total_Strong_More18] = @Original_Area_Total_St" +
                "rong_More18) AND ([Area_Total_End_Low18] = @Original_Area_Total_End_Low18) AND (" +
                "[Area_Total_Standart_End_More18] = @Original_Area_Total_Standart_End_More18) AND" +
                " ([Area_Total_Strong_End_More18] = @Original_Area_Total_Strong_End_More18) AND (" +
                "[Area_Total_Standart_Seam_Low18] = @Original_Area_Total_Standart_Seam_Low18) AND" +
                " ([Area_Total_Standart_Seam_More18] = @Original_Area_Total_Standart_Seam_More18)" +
                " AND ([Area_Total_Strong_Seam_More18] = @Original_Area_Total_Strong_Seam_More18)" +
                " AND ([Correction_Low18] = @Original_Correction_Low18) AND ([Correction_More18] " +
                "= @Original_Correction_More18) AND ([Area_Live_Low18] = @Original_Area_Live_Low1" +
                "8) AND ([Area_Live_Standart_More18] = @Original_Area_Live_Standart_More18) AND (" +
                "[Area_Live_Strong_More18] = @Original_Area_Live_Strong_More18) AND ([Area_Live_E" +
                "nd_Low18] = @Original_Area_Live_End_Low18) AND ([Area_Live_Standart_End_More18] " +
                "= @Original_Area_Live_Standart_End_More18) AND ([Area_Live_Strong_End_More18] = " +
                "@Original_Area_Live_Strong_End_More18) AND ([Area_Live_Seam_Low18] = @Original_A" +
                "rea_Live_Seam_Low18) AND ([Area_Live_Standart_Seam_More18] = @Original_Area_Live" +
                "_Standart_Seam_More18) AND ([Area_Live_Strong_Seam_More18] = @Original_Area_Live" +
                "_Strong_Seam_More18) AND ((@IsNull_Area_Level_Combo = 1 AND [Area_Level_Combo] I" +
                "S NULL) OR ([Area_Level_Combo] = @Original_Area_Level_Combo)) AND ((@IsNull_Area" +
                "_Level_End = 1 AND [Area_Level_End] IS NULL) OR ([Area_Level_End] = @Original_Ar" +
                "ea_Level_End)) AND ((@IsNull_Area_Level_Seam = 1 AND [Area_Level_Seam] IS NULL) " +
                "OR ([Area_Level_Seam] = @Original_Area_Level_Seam)) AND ((@IsNull_Area_OutFlat_C" +
                "ombo = 1 AND [Area_OutFlat_Combo] IS NULL) OR ([Area_OutFlat_Combo] = @Original_" +
                "Area_OutFlat_Combo)) AND ((@IsNull_Area_OutFlat_Strong = 1 AND [Area_OutFlat_Str" +
                "ong] IS NULL) OR ([Area_OutFlat_Strong] = @Original_Area_OutFlat_Strong)) AND ((" +
                "@IsNull_Like_Koef = 1 AND [Like_Koef] IS NULL) OR ([Like_Koef] = @Original_Like_" +
                "Koef)));\r\nSELECT Id_Area, Short_Type, Area_Total_Low18, Area_Total_Standart_More" +
                "18, Area_Total_Strong_More18, Area_Total_End_Low18, Area_Total_Standart_End_More" +
                "18, Area_Total_Strong_End_More18, Area_Total_Standart_Seam_Low18, Area_Total_Sta" +
                "ndart_Seam_More18, Area_Total_Strong_Seam_More18, Correction_Low18, Correction_M" +
                "ore18, Area_Live_Low18, Area_Live_Standart_More18, Area_Live_Strong_More18, Area" +
                "_Live_End_Low18, Area_Live_Standart_End_More18, Area_Live_Strong_End_More18, Are" +
                "a_Live_Seam_Low18, Area_Live_Standart_Seam_More18, Area_Live_Strong_Seam_More18," +
                " Area_Level_Combo, Area_Level_End, Area_Level_Seam, Area_OutFlat_Combo, Area_Out" +
                "Flat_Strong, Like_Koef FROM C_Flats_PIK1_Areas WHERE (Id_Area = @Id_Area)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Short_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Short_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_Low18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_More18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_End", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Seam", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Strong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Like_Koef", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Area", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Area", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Short_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Short_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_End_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Total_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Correction_Low18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Correction_More18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_End_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_End_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_End_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_End_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Seam_Low18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Seam_Low18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Live_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_Seam_More18", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_Combo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_End", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_End", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_Level_Seam", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_Level_Seam", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_OutFlat_Combo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_OutFlat_Combo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Area_OutFlat_Strong", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Area_OutFlat_Strong", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Like_Koef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Like_Koef", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Like_Koef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Area", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Area", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AR_AreaZhuk.Properties.Settings.Default.SAPRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id_Area, Short_Type, Area_Total_Low18, Area_Total_Standart_More18, Area_Total_Strong_More18, Area_Total_End_Low18, Area_Total_Standart_End_More18, 
                         Area_Total_Strong_End_More18, Area_Total_Standart_Seam_Low18, Area_Total_Standart_Seam_More18, Area_Total_Strong_Seam_More18, Correction_Low18, 
                         Correction_More18, Area_Live_Low18, Area_Live_Standart_More18, Area_Live_Strong_More18, Area_Live_End_Low18, Area_Live_Standart_End_More18, 
                         Area_Live_Strong_End_More18, Area_Live_Seam_Low18, Area_Live_Standart_Seam_More18, Area_Live_Strong_Seam_More18, Area_Level_Combo, 
                         Area_Level_End, Area_Level_Seam, Area_OutFlat_Combo, Area_OutFlat_Strong, Like_Koef
FROM            C_Flats_PIK1_Areas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE       C_Flats_PIK1_Areas\r\nSET                Area_Total_Low18 = @Area_Tota" +
                "l_Low18, Area_Total_Standart_More18 = @Area_Total_Standart_More18, \r\n           " +
                "              Area_Total_Strong_More18 = @Area_Total_Strong_More18, Area_Total_E" +
                "nd_Low18 = @Area_Total_End_Low18, \r\n                         Area_Total_Standart" +
                "_End_More18 = @Area_Total_Standart_End_More18, Area_Total_Strong_End_More18 = @A" +
                "rea_Total_Strong_End_More18, \r\n                         Area_Total_Standart_Seam" +
                "_Low18 = @Area_Total_Standart_Seam_Low18, Area_Total_Standart_Seam_More18 = @Are" +
                "a_Total_Standart_Seam_More18, \r\n                         Area_Total_Strong_Seam_" +
                "More18 = @Area_Total_Strong_Seam_More18, Correction_Low18 = @Correction_Low18, C" +
                "orrection_More18 = @Correction_More18, \r\n                         Area_Live_Low1" +
                "8 = @Area_Live_Low18, Area_Live_Standart_More18 = @Area_Live_Standart_More18, Ar" +
                "ea_Live_Strong_More18 = @Area_Live_Strong_More18, \r\n                         Are" +
                "a_Live_End_Low18 = @Area_Live_End_Low18, Area_Live_Standart_End_More18 = @Area_L" +
                "ive_Standart_End_More18, \r\n                         Area_Live_Strong_End_More18 " +
                "= @Area_Live_Strong_End_More18, Area_Live_Seam_Low18 = @Area_Live_Seam_Low18, \r\n" +
                "                         Area_Live_Standart_Seam_More18 = @Area_Live_Standart_Se" +
                "am_More18, Area_Live_Strong_Seam_More18 = @Area_Live_Strong_Seam_More18, \r\n     " +
                "                    Area_Level_Combo = @Area_Level_Combo, Area_Level_End = @Area" +
                "_Level_End, Area_Level_Seam = @Area_Level_Seam, \r\n                         Area_" +
                "OutFlat_Combo = @Area_OutFlat_Combo, Area_OutFlat_Strong = @Area_OutFlat_Strong\r" +
                "\nWHERE        (Short_Type = @Original_Short_Type);  \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_End_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_End_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_End_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Total_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Total_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_Low18", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Correction_More18", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Correction_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_End_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_End_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_End_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_End_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_End_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Seam_Low18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Seam_Low18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Standart_Seam_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Standart_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Live_Strong_Seam_More18", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Live_Strong_Seam_More18", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Combo", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_End", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_End", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_Level_Seam", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_Level_Seam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Combo", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Combo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area_OutFlat_Strong", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Area_OutFlat_Strong", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Short_Type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Short_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PIK1.C_Flats_PIK1_AreasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PIK1.C_Flats_PIK1_AreasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PIK1.C_Flats_PIK1_AreasDataTable dataTable = new PIK1.C_Flats_PIK1_AreasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1.C_Flats_PIK1_AreasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PIK1 dataSet) {
            return this.Adapter.Update(dataSet, "C_Flats_PIK1_Areas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id_Area, 
                    string Original_Short_Type, 
                    double Original_Area_Total_Low18, 
                    double Original_Area_Total_Standart_More18, 
                    double Original_Area_Total_Strong_More18, 
                    double Original_Area_Total_End_Low18, 
                    double Original_Area_Total_Standart_End_More18, 
                    double Original_Area_Total_Strong_End_More18, 
                    double Original_Area_Total_Standart_Seam_Low18, 
                    double Original_Area_Total_Standart_Seam_More18, 
                    double Original_Area_Total_Strong_Seam_More18, 
                    string Original_Correction_Low18, 
                    string Original_Correction_More18, 
                    double Original_Area_Live_Low18, 
                    double Original_Area_Live_Standart_More18, 
                    double Original_Area_Live_Strong_More18, 
                    double Original_Area_Live_End_Low18, 
                    double Original_Area_Live_Standart_End_More18, 
                    double Original_Area_Live_Strong_End_More18, 
                    double Original_Area_Live_Seam_Low18, 
                    double Original_Area_Live_Standart_Seam_More18, 
                    double Original_Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Original_Area_Level_Combo, 
                    global::System.Nullable<double> Original_Area_Level_End, 
                    global::System.Nullable<double> Original_Area_Level_Seam, 
                    global::System.Nullable<double> Original_Area_OutFlat_Combo, 
                    global::System.Nullable<double> Original_Area_OutFlat_Strong, 
                    global::System.Nullable<double> Original_Like_Koef) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_Area));
            if ((Original_Short_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Short_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Short_Type));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Area_Total_Low18));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Area_Total_Standart_More18));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Area_Total_Strong_More18));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Area_Total_End_Low18));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Area_Total_Standart_End_More18));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_Area_Total_Strong_End_More18));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Area_Total_Standart_Seam_Low18));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_Area_Total_Standart_Seam_More18));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Area_Total_Strong_Seam_More18));
            if ((Original_Correction_Low18 == null)) {
                throw new global::System.ArgumentNullException("Original_Correction_Low18");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Correction_Low18));
            }
            if ((Original_Correction_More18 == null)) {
                throw new global::System.ArgumentNullException("Original_Correction_More18");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Correction_More18));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Area_Live_Low18));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Area_Live_Standart_More18));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_Area_Live_Strong_More18));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Area_Live_End_Low18));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Area_Live_Standart_End_More18));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Area_Live_Strong_End_More18));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_Area_Live_Seam_Low18));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Area_Live_Standart_Seam_More18));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_Area_Live_Strong_Seam_More18));
            if ((Original_Area_Level_Combo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_Area_Level_Combo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_Level_End.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_Area_Level_End.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_Level_Seam.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_Area_Level_Seam.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_OutFlat_Combo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_Area_OutFlat_Combo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_OutFlat_Strong.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_Area_OutFlat_Strong.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Like_Koef.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_Like_Koef.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Short_Type, 
                    double Area_Total_Low18, 
                    double Area_Total_Standart_More18, 
                    double Area_Total_Strong_More18, 
                    double Area_Total_End_Low18, 
                    double Area_Total_Standart_End_More18, 
                    double Area_Total_Strong_End_More18, 
                    double Area_Total_Standart_Seam_Low18, 
                    double Area_Total_Standart_Seam_More18, 
                    double Area_Total_Strong_Seam_More18, 
                    string Correction_Low18, 
                    string Correction_More18, 
                    double Area_Live_Low18, 
                    double Area_Live_Standart_More18, 
                    double Area_Live_Strong_More18, 
                    double Area_Live_End_Low18, 
                    double Area_Live_Standart_End_More18, 
                    double Area_Live_Strong_End_More18, 
                    double Area_Live_Seam_Low18, 
                    double Area_Live_Standart_Seam_More18, 
                    double Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Area_Level_Combo, 
                    global::System.Nullable<double> Area_Level_End, 
                    global::System.Nullable<double> Area_Level_Seam, 
                    global::System.Nullable<double> Area_OutFlat_Combo, 
                    global::System.Nullable<double> Area_OutFlat_Strong, 
                    global::System.Nullable<double> Like_Koef) {
            if ((Short_Type == null)) {
                throw new global::System.ArgumentNullException("Short_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Short_Type));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Area_Total_Low18));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Area_Total_Standart_More18));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Area_Total_Strong_More18));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Area_Total_End_Low18));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Area_Total_Standart_End_More18));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Area_Total_Strong_End_More18));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Area_Total_Standart_Seam_Low18));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Area_Total_Standart_Seam_More18));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Area_Total_Strong_Seam_More18));
            if ((Correction_Low18 == null)) {
                throw new global::System.ArgumentNullException("Correction_Low18");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Correction_Low18));
            }
            if ((Correction_More18 == null)) {
                throw new global::System.ArgumentNullException("Correction_More18");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Correction_More18));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Area_Live_Low18));
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Area_Live_Standart_More18));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Area_Live_Strong_More18));
            this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Area_Live_End_Low18));
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Area_Live_Standart_End_More18));
            this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Area_Live_Strong_End_More18));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Area_Live_Seam_Low18));
            this.Adapter.InsertCommand.Parameters[19].Value = ((double)(Area_Live_Standart_Seam_More18));
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(Area_Live_Strong_Seam_More18));
            if ((Area_Level_Combo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Area_Level_Combo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_End.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(Area_Level_End.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_Seam.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(Area_Level_Seam.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Combo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(Area_OutFlat_Combo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Strong.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(Area_OutFlat_Strong.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Like_Koef.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(Like_Koef.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Short_Type, 
                    double Area_Total_Low18, 
                    double Area_Total_Standart_More18, 
                    double Area_Total_Strong_More18, 
                    double Area_Total_End_Low18, 
                    double Area_Total_Standart_End_More18, 
                    double Area_Total_Strong_End_More18, 
                    double Area_Total_Standart_Seam_Low18, 
                    double Area_Total_Standart_Seam_More18, 
                    double Area_Total_Strong_Seam_More18, 
                    string Correction_Low18, 
                    string Correction_More18, 
                    double Area_Live_Low18, 
                    double Area_Live_Standart_More18, 
                    double Area_Live_Strong_More18, 
                    double Area_Live_End_Low18, 
                    double Area_Live_Standart_End_More18, 
                    double Area_Live_Strong_End_More18, 
                    double Area_Live_Seam_Low18, 
                    double Area_Live_Standart_Seam_More18, 
                    double Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Area_Level_Combo, 
                    global::System.Nullable<double> Area_Level_End, 
                    global::System.Nullable<double> Area_Level_Seam, 
                    global::System.Nullable<double> Area_OutFlat_Combo, 
                    global::System.Nullable<double> Area_OutFlat_Strong, 
                    global::System.Nullable<double> Like_Koef, 
                    int Original_Id_Area, 
                    string Original_Short_Type, 
                    double Original_Area_Total_Low18, 
                    double Original_Area_Total_Standart_More18, 
                    double Original_Area_Total_Strong_More18, 
                    double Original_Area_Total_End_Low18, 
                    double Original_Area_Total_Standart_End_More18, 
                    double Original_Area_Total_Strong_End_More18, 
                    double Original_Area_Total_Standart_Seam_Low18, 
                    double Original_Area_Total_Standart_Seam_More18, 
                    double Original_Area_Total_Strong_Seam_More18, 
                    string Original_Correction_Low18, 
                    string Original_Correction_More18, 
                    double Original_Area_Live_Low18, 
                    double Original_Area_Live_Standart_More18, 
                    double Original_Area_Live_Strong_More18, 
                    double Original_Area_Live_End_Low18, 
                    double Original_Area_Live_Standart_End_More18, 
                    double Original_Area_Live_Strong_End_More18, 
                    double Original_Area_Live_Seam_Low18, 
                    double Original_Area_Live_Standart_Seam_More18, 
                    double Original_Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Original_Area_Level_Combo, 
                    global::System.Nullable<double> Original_Area_Level_End, 
                    global::System.Nullable<double> Original_Area_Level_Seam, 
                    global::System.Nullable<double> Original_Area_OutFlat_Combo, 
                    global::System.Nullable<double> Original_Area_OutFlat_Strong, 
                    global::System.Nullable<double> Original_Like_Koef, 
                    int Id_Area) {
            if ((Short_Type == null)) {
                throw new global::System.ArgumentNullException("Short_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Short_Type));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Area_Total_Low18));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Area_Total_Standart_More18));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Area_Total_Strong_More18));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Area_Total_End_Low18));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Area_Total_Standart_End_More18));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Area_Total_Strong_End_More18));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Area_Total_Standart_Seam_Low18));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Area_Total_Standart_Seam_More18));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Area_Total_Strong_Seam_More18));
            if ((Correction_Low18 == null)) {
                throw new global::System.ArgumentNullException("Correction_Low18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Correction_Low18));
            }
            if ((Correction_More18 == null)) {
                throw new global::System.ArgumentNullException("Correction_More18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Correction_More18));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Area_Live_Low18));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Area_Live_Standart_More18));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Area_Live_Strong_More18));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Area_Live_End_Low18));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Area_Live_Standart_End_More18));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Area_Live_Strong_End_More18));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Area_Live_Seam_Low18));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Area_Live_Standart_Seam_More18));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Area_Live_Strong_Seam_More18));
            if ((Area_Level_Combo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Area_Level_Combo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_End.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Area_Level_End.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_Seam.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Area_Level_Seam.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Combo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Area_OutFlat_Combo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Strong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Area_OutFlat_Strong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Like_Koef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Like_Koef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_Id_Area));
            if ((Original_Short_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Short_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Short_Type));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Area_Total_Low18));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_Area_Total_Standart_More18));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Area_Total_Strong_More18));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_Area_Total_End_Low18));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_Area_Total_Standart_End_More18));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_Area_Total_Strong_End_More18));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_Area_Total_Standart_Seam_Low18));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_Area_Total_Standart_Seam_More18));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_Area_Total_Strong_Seam_More18));
            if ((Original_Correction_Low18 == null)) {
                throw new global::System.ArgumentNullException("Original_Correction_Low18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Correction_Low18));
            }
            if ((Original_Correction_More18 == null)) {
                throw new global::System.ArgumentNullException("Original_Correction_More18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Correction_More18));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_Area_Live_Low18));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_Area_Live_Standart_More18));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_Area_Live_Strong_More18));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_Area_Live_End_Low18));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_Area_Live_Standart_End_More18));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_Area_Live_Strong_End_More18));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_Area_Live_Seam_Low18));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_Area_Live_Standart_Seam_More18));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_Area_Live_Strong_Seam_More18));
            if ((Original_Area_Level_Combo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_Area_Level_Combo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_Level_End.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_Area_Level_End.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_Level_Seam.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_Area_Level_Seam.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_OutFlat_Combo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_Area_OutFlat_Combo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Area_OutFlat_Strong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_Area_OutFlat_Strong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Like_Koef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_Like_Koef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Id_Area));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Short_Type, 
                    double Area_Total_Low18, 
                    double Area_Total_Standart_More18, 
                    double Area_Total_Strong_More18, 
                    double Area_Total_End_Low18, 
                    double Area_Total_Standart_End_More18, 
                    double Area_Total_Strong_End_More18, 
                    double Area_Total_Standart_Seam_Low18, 
                    double Area_Total_Standart_Seam_More18, 
                    double Area_Total_Strong_Seam_More18, 
                    string Correction_Low18, 
                    string Correction_More18, 
                    double Area_Live_Low18, 
                    double Area_Live_Standart_More18, 
                    double Area_Live_Strong_More18, 
                    double Area_Live_End_Low18, 
                    double Area_Live_Standart_End_More18, 
                    double Area_Live_Strong_End_More18, 
                    double Area_Live_Seam_Low18, 
                    double Area_Live_Standart_Seam_More18, 
                    double Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Area_Level_Combo, 
                    global::System.Nullable<double> Area_Level_End, 
                    global::System.Nullable<double> Area_Level_Seam, 
                    global::System.Nullable<double> Area_OutFlat_Combo, 
                    global::System.Nullable<double> Area_OutFlat_Strong, 
                    global::System.Nullable<double> Like_Koef, 
                    int Original_Id_Area, 
                    string Original_Short_Type, 
                    double Original_Area_Total_Low18, 
                    double Original_Area_Total_Standart_More18, 
                    double Original_Area_Total_Strong_More18, 
                    double Original_Area_Total_End_Low18, 
                    double Original_Area_Total_Standart_End_More18, 
                    double Original_Area_Total_Strong_End_More18, 
                    double Original_Area_Total_Standart_Seam_Low18, 
                    double Original_Area_Total_Standart_Seam_More18, 
                    double Original_Area_Total_Strong_Seam_More18, 
                    string Original_Correction_Low18, 
                    string Original_Correction_More18, 
                    double Original_Area_Live_Low18, 
                    double Original_Area_Live_Standart_More18, 
                    double Original_Area_Live_Strong_More18, 
                    double Original_Area_Live_End_Low18, 
                    double Original_Area_Live_Standart_End_More18, 
                    double Original_Area_Live_Strong_End_More18, 
                    double Original_Area_Live_Seam_Low18, 
                    double Original_Area_Live_Standart_Seam_More18, 
                    double Original_Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Original_Area_Level_Combo, 
                    global::System.Nullable<double> Original_Area_Level_End, 
                    global::System.Nullable<double> Original_Area_Level_Seam, 
                    global::System.Nullable<double> Original_Area_OutFlat_Combo, 
                    global::System.Nullable<double> Original_Area_OutFlat_Strong, 
                    global::System.Nullable<double> Original_Like_Koef) {
            return this.Update(Short_Type, Area_Total_Low18, Area_Total_Standart_More18, Area_Total_Strong_More18, Area_Total_End_Low18, Area_Total_Standart_End_More18, Area_Total_Strong_End_More18, Area_Total_Standart_Seam_Low18, Area_Total_Standart_Seam_More18, Area_Total_Strong_Seam_More18, Correction_Low18, Correction_More18, Area_Live_Low18, Area_Live_Standart_More18, Area_Live_Strong_More18, Area_Live_End_Low18, Area_Live_Standart_End_More18, Area_Live_Strong_End_More18, Area_Live_Seam_Low18, Area_Live_Standart_Seam_More18, Area_Live_Strong_Seam_More18, Area_Level_Combo, Area_Level_End, Area_Level_Seam, Area_OutFlat_Combo, Area_OutFlat_Strong, Like_Koef, Original_Id_Area, Original_Short_Type, Original_Area_Total_Low18, Original_Area_Total_Standart_More18, Original_Area_Total_Strong_More18, Original_Area_Total_End_Low18, Original_Area_Total_Standart_End_More18, Original_Area_Total_Strong_End_More18, Original_Area_Total_Standart_Seam_Low18, Original_Area_Total_Standart_Seam_More18, Original_Area_Total_Strong_Seam_More18, Original_Correction_Low18, Original_Correction_More18, Original_Area_Live_Low18, Original_Area_Live_Standart_More18, Original_Area_Live_Strong_More18, Original_Area_Live_End_Low18, Original_Area_Live_Standart_End_More18, Original_Area_Live_Strong_End_More18, Original_Area_Live_Seam_Low18, Original_Area_Live_Standart_Seam_More18, Original_Area_Live_Strong_Seam_More18, Original_Area_Level_Combo, Original_Area_Level_End, Original_Area_Level_Seam, Original_Area_OutFlat_Combo, Original_Area_OutFlat_Strong, Original_Like_Koef, Original_Id_Area);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateAreaFlat(
                    double Area_Total_Low18, 
                    double Area_Total_Standart_More18, 
                    double Area_Total_Strong_More18, 
                    double Area_Total_End_Low18, 
                    double Area_Total_Standart_End_More18, 
                    double Area_Total_Strong_End_More18, 
                    double Area_Total_Standart_Seam_Low18, 
                    double Area_Total_Standart_Seam_More18, 
                    double Area_Total_Strong_Seam_More18, 
                    string Correction_Low18, 
                    string Correction_More18, 
                    double Area_Live_Low18, 
                    double Area_Live_Standart_More18, 
                    double Area_Live_Strong_More18, 
                    double Area_Live_End_Low18, 
                    double Area_Live_Standart_End_More18, 
                    double Area_Live_Strong_End_More18, 
                    double Area_Live_Seam_Low18, 
                    double Area_Live_Standart_Seam_More18, 
                    double Area_Live_Strong_Seam_More18, 
                    global::System.Nullable<double> Area_Level_Combo, 
                    global::System.Nullable<double> Area_Level_End, 
                    global::System.Nullable<double> Area_Level_Seam, 
                    global::System.Nullable<double> Area_OutFlat_Combo, 
                    global::System.Nullable<double> Area_OutFlat_Strong, 
                    string Original_Short_Type) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((double)(Area_Total_Low18));
            command.Parameters[1].Value = ((double)(Area_Total_Standart_More18));
            command.Parameters[2].Value = ((double)(Area_Total_Strong_More18));
            command.Parameters[3].Value = ((double)(Area_Total_End_Low18));
            command.Parameters[4].Value = ((double)(Area_Total_Standart_End_More18));
            command.Parameters[5].Value = ((double)(Area_Total_Strong_End_More18));
            command.Parameters[6].Value = ((double)(Area_Total_Standart_Seam_Low18));
            command.Parameters[7].Value = ((double)(Area_Total_Standart_Seam_More18));
            command.Parameters[8].Value = ((double)(Area_Total_Strong_Seam_More18));
            if ((Correction_Low18 == null)) {
                throw new global::System.ArgumentNullException("Correction_Low18");
            }
            else {
                command.Parameters[9].Value = ((string)(Correction_Low18));
            }
            if ((Correction_More18 == null)) {
                throw new global::System.ArgumentNullException("Correction_More18");
            }
            else {
                command.Parameters[10].Value = ((string)(Correction_More18));
            }
            command.Parameters[11].Value = ((double)(Area_Live_Low18));
            command.Parameters[12].Value = ((double)(Area_Live_Standart_More18));
            command.Parameters[13].Value = ((double)(Area_Live_Strong_More18));
            command.Parameters[14].Value = ((double)(Area_Live_End_Low18));
            command.Parameters[15].Value = ((double)(Area_Live_Standart_End_More18));
            command.Parameters[16].Value = ((double)(Area_Live_Strong_End_More18));
            command.Parameters[17].Value = ((double)(Area_Live_Seam_Low18));
            command.Parameters[18].Value = ((double)(Area_Live_Standart_Seam_More18));
            command.Parameters[19].Value = ((double)(Area_Live_Strong_Seam_More18));
            if ((Area_Level_Combo.HasValue == true)) {
                command.Parameters[20].Value = ((double)(Area_Level_Combo.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_End.HasValue == true)) {
                command.Parameters[21].Value = ((double)(Area_Level_End.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Area_Level_Seam.HasValue == true)) {
                command.Parameters[22].Value = ((double)(Area_Level_Seam.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Combo.HasValue == true)) {
                command.Parameters[23].Value = ((double)(Area_OutFlat_Combo.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Area_OutFlat_Strong.HasValue == true)) {
                command.Parameters[24].Value = ((double)(Area_OutFlat_Strong.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Short_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Short_Type");
            }
            else {
                command.Parameters[25].Value = ((string)(Original_Short_Type));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private F_nn_FlatsInSectionTableAdapter _f_nn_FlatsInSectionTableAdapter;
        
        private C_Flats_PIK1TableAdapter _c_Flats_PIK1TableAdapter;
        
        private C_Flats_PIK1_AreasTableAdapter _c_Flats_PIK1_AreasTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public F_nn_FlatsInSectionTableAdapter F_nn_FlatsInSectionTableAdapter {
            get {
                return this._f_nn_FlatsInSectionTableAdapter;
            }
            set {
                this._f_nn_FlatsInSectionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public C_Flats_PIK1TableAdapter C_Flats_PIK1TableAdapter {
            get {
                return this._c_Flats_PIK1TableAdapter;
            }
            set {
                this._c_Flats_PIK1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public C_Flats_PIK1_AreasTableAdapter C_Flats_PIK1_AreasTableAdapter {
            get {
                return this._c_Flats_PIK1_AreasTableAdapter;
            }
            set {
                this._c_Flats_PIK1_AreasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._f_nn_FlatsInSectionTableAdapter != null) 
                            && (this._f_nn_FlatsInSectionTableAdapter.Connection != null))) {
                    return this._f_nn_FlatsInSectionTableAdapter.Connection;
                }
                if (((this._c_Flats_PIK1TableAdapter != null) 
                            && (this._c_Flats_PIK1TableAdapter.Connection != null))) {
                    return this._c_Flats_PIK1TableAdapter.Connection;
                }
                if (((this._c_Flats_PIK1_AreasTableAdapter != null) 
                            && (this._c_Flats_PIK1_AreasTableAdapter.Connection != null))) {
                    return this._c_Flats_PIK1_AreasTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._c_Flats_PIK1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(PIK1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._c_Flats_PIK1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.C_Flats_PIK1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._c_Flats_PIK1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.F_nn_FlatsInSection.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._f_nn_FlatsInSectionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.C_Flats_PIK1_Areas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._c_Flats_PIK1_AreasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(PIK1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._c_Flats_PIK1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.C_Flats_PIK1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._c_Flats_PIK1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.F_nn_FlatsInSection.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._f_nn_FlatsInSectionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.C_Flats_PIK1_Areas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._c_Flats_PIK1_AreasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(PIK1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.C_Flats_PIK1_Areas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._c_Flats_PIK1_AreasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.F_nn_FlatsInSection.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._f_nn_FlatsInSectionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._c_Flats_PIK1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.C_Flats_PIK1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._c_Flats_PIK1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(PIK1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._f_nn_FlatsInSectionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._f_nn_FlatsInSectionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._c_Flats_PIK1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._c_Flats_PIK1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._c_Flats_PIK1_AreasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._c_Flats_PIK1_AreasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                    revertConnections.Add(this._f_nn_FlatsInSectionTableAdapter, this._f_nn_FlatsInSectionTableAdapter.Connection);
                    this._f_nn_FlatsInSectionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._f_nn_FlatsInSectionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._f_nn_FlatsInSectionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._f_nn_FlatsInSectionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._f_nn_FlatsInSectionTableAdapter.Adapter);
                    }
                }
                if ((this._c_Flats_PIK1TableAdapter != null)) {
                    revertConnections.Add(this._c_Flats_PIK1TableAdapter, this._c_Flats_PIK1TableAdapter.Connection);
                    this._c_Flats_PIK1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._c_Flats_PIK1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._c_Flats_PIK1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._c_Flats_PIK1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._c_Flats_PIK1TableAdapter.Adapter);
                    }
                }
                if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                    revertConnections.Add(this._c_Flats_PIK1_AreasTableAdapter, this._c_Flats_PIK1_AreasTableAdapter.Connection);
                    this._c_Flats_PIK1_AreasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._c_Flats_PIK1_AreasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._c_Flats_PIK1_AreasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._c_Flats_PIK1_AreasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._c_Flats_PIK1_AreasTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._f_nn_FlatsInSectionTableAdapter != null)) {
                    this._f_nn_FlatsInSectionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._f_nn_FlatsInSectionTableAdapter]));
                    this._f_nn_FlatsInSectionTableAdapter.Transaction = null;
                }
                if ((this._c_Flats_PIK1TableAdapter != null)) {
                    this._c_Flats_PIK1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._c_Flats_PIK1TableAdapter]));
                    this._c_Flats_PIK1TableAdapter.Transaction = null;
                }
                if ((this._c_Flats_PIK1_AreasTableAdapter != null)) {
                    this._c_Flats_PIK1_AreasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._c_Flats_PIK1_AreasTableAdapter]));
                    this._c_Flats_PIK1_AreasTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591